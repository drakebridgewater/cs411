%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: example.dvi
%%CreationDate: Wed Oct 30 21:24:49 2013
%%Pages: 7
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMR17 CMR12 CMR10 CMBX12 CMBX10 CMITT10 CMTT10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -R -Poutline -t letter example.dvi -o
%+ example.ps
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2013.10.30:2124
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: CMTT10
%!PS-AdobeFont-1.1: CMTT10 1.00B
%%CreationDate: 1992 Apr 26 10:42:42
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 33 /exclam put
dup 34 /quotedbl put
dup 37 /percent put
dup 38 /ampersand put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 52 /four put
dup 59 /semicolon put
dup 60 /less put
dup 61 /equal put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 91 /bracketleft put
dup 92 /backslash put
dup 93 /bracketright put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
dup 123 /braceleft put
dup 125 /braceright put
readonly def
/FontBBox{-4 -235 731 800}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D19
38DD5C4467F9DD8C5D1A2000B3A6BF2F25629BAEC199AE8BD4BA6ED9BBF7DABF
D0E153BAB1C17900D4FCE209622ACD19E7C74C2807D0397357ED07AB460D5204
EB3A45B7AC4D106B7303AD8348853032A745F417943F9B4FED652B835AA49727
A8B4117AFF1D4BCE831EB510B6851796D0BE6982B76620CB3CE0C22CACDD4593
F244C14EEC0E5A7C4AC42392F81C01BC4257FE12AF33F4BFEA9108FF11CF9714
4DD6EC70A2C4C1E4F328A1EB25E43525FB1E16C07E28CC359DF61F426B7D41EA
6A0C84DD63275395A503AAE908E1C82D389FD12A21E86999799E7F24A994472E
A10EAE77096709BE0D11AAD24A30D96E15A51D720AFB3B10D2E0AC8DC1A1204B
E8725E00D7E3A96F9978BC19377034D93D080C4391E579C34FF9FC2379CB119F
1E5BBEA91AE20F343C6420BE1E2BD0636B04FCCC0BEE0DC2D56D66F06DB22438
452822CBEAF03EE9EAA8398F276EC0D92A7FB978C17805DB2F4A7DFBA56FD6AF
8670EB364F01DE8FCAFBAF657D68C3A03112915736CEABAA8BA5C0AC25288369
5D49BD891FABEFE8699A0AE3ED85B48ACB22229E15623399C93DE7D935734ADA
DA7A1462C111D44AD53EA35B57E5D0B5FC0B481820E43222DB8EFCD5D30E15F9
BA304FA879392EE0BCC0E1A61E74B3A1FC3A3D170218D7244580C7AA0DC65D19
741FA5FE6F8CBF60250ACC27454BBF0897CA4B909C83A56672958752ED4B5E79
E18660764F155E86F09EFA9F7685F2F5027EC85A775287B30E2069DE4E4D5712
E7D033481A53A2702BA7542C71062173039030CF28D8B9C63B5596A9B42B33E7
D922944A38713383D3648A4AF160A3B0C8F3379BA4372BE2E7EA49AABA75AEEE
C5DDE1D8BF68483C3D21271280ABB91D54CC819680322EAB72E1250A760BC8DC
FF798F2ABFC4F3539392985C4CB324B0007229586D1E0321559F67C057FD7902
194490A4C133DA790FF3BF23A13C2B1B69EEB75950F9106F2BA1E3CA65C90FF5
931DADF03DA48AFB8561FC2E710087251BFC42B80B297A3DB0DA138A7622A931
DA293B0C740987ACE9F2A8EC2DB98F85783C01623FD3612C7E4A84FD93446770
C3DD7431F955A5F3734F6931BD790F0A421EA6A0E8B93E9307C4C7A32D695BB6
998BD57594BF56A63F90872DBD3A4385EBFE7949B8472B63BA80FA161075C934
B7A2C677B84C28F695CA068C9F4726B01293CA0EF76B54D957C1B1F97D357057
B13C9FAEA0F4B5FA6D56CC11AC6236D59C7876B55618B1DB45B50FD965CA365B
B36EC9B1A0C24BD5D031C9064826108B21EA48DB17361EC0759CFB8DEDAF32F7
19A4DCF886DD863274CBB35A79610367CE47DA2E46D13B90688B8F459CF10D41
9503316E7D07C3AA67E56BA0B9798E2320006FD9963174FF8638C1AAAD266DDB
DEE9D437DF857754248A6CC9B247103EAE4E596C15DD676EF90A2E54A8082A99
25BD5B86670B4677DE89295BD97C27B54367CBD15DD0775D43888373D8FB54D9
888264836889EB98763BAD282B6B9E339D1526442B3AF9EC7A2D790515A99BA2
631136838821BB0541FA4FA7D902C14BD8957E10B5E4720060CEC83FB5CB8925
1F14B0CF9007B7C5230D339EC62563A102BA1E03078CC4DAB7563CDD7BB8510D
E93BC7E96ECB6D4EA5F75759AF95A1CFCE85FD602AE1D22A07493302D16AB03A
EF993B4FA27CA18A426FCF6510432809A7399FD82F1CB0D5CD360A1EFFD58482
FFEE4CEB1137576325FDA276E96C7E50608C28336EDE6C22C2737A810763CF22
CA389CAF0FB4A38CD76867493FA598CA0534A00F29B4F72461C116131FED34AD
A1597B2B23416684A23DB70233E8390BCD9C587AA8B13CF7BB99DF2062DCDE72
E6CE16B421FE70937089BF713ED0B64C82414B4EC3AC1C7BFC814523B2756FC9
BEB01204711C44B0D90C20D92E529373DCA298C4681F78F1235E634462618570
9773046EF215FA10ABA4F86F32BF811906B4DC798167F2C432F5A82312876A9B
65D3A019161EA6F751A1FA2C9500FC02A5FA3BB511193DBB828EF5C3CC5E88A4
40F78CB44E484F3454B621A6EE779285F3AFA7D3E35DB5A108433E90DA684EFE
7264E703BF7107CC67E87376B3D1EB26AC3303B39AC1EDDB5F58539B9DF9225E
EF95B07518E8868322B54123FBF53DD5406D527CDE9785DE6C28EEEDFBAFADE8
9FD4C974B95B79FF9D1DC573A3DB382F5770F63F3A7F58BECED333B360878F28
9F9378578F08400A517B59B7C22F1285EAD3FF21A6258C0AF3288A7BA00E855F
2A898FECE7AE55561508AC4846BC1D79DEE321C26B6F76B06BCE6E928AAD7D6B
D1587F194979F4718725947F48AB575249611DFF08037C584285E492C583CC5C
DDEC1DFA7A00FF17A026B1566F063E0EDA0482D88DD7E93C7C9EAEDC481BE19F
EF7E4AAFD4E46849FEA356388055E7ED70A5056F7BBD11A11E315A4B09CD2A21
19FDD4FC21D0F15AE532D8D47C26F00DECCA76410B2462EE24013A679B1424FF
8BFCA53E218947190EF6E36329AAD438B0941318F2A1E9CB242FEAA03591434D
8F3A6E0CB2243FC078F6AB127C5CCFF40F6B42E3D62CA81BE06A6A8B76CB7F2D
05EF781A9057B65A871B183DED797D6229FB012EC2B4078B4157C371E02DB973
D7B676946D2377EDAFFCC644C464A9F66BB2463E420A386D9DCDEF78CEC6D22B
16B8961B3830AA803C29D09A0060098511DB5F25AAB07685F0364552B1D326DB
E547D6CD3E15A12E82428AA5F31169636A1738D05B20DA35F5C981EF9129D881
011138A8DAB7197C15C108FCEA5B919A6D915747EC3F34668F69AD9F7B2B76EA
DDDCC500130C322E77BCA84FA51A93A3B47EAE3EAFE99931D75536176785F1DA
9297E21679925A6B6C1DED5D7D94196747C007B0EC4351FDB1F5949DA58BFEBF
CB3D303ACF0D26BEFF7BAC44F2963CBCA0AA9B1D606D300B3B5FC5B04C741B37
4D02BFE10B4513A865952E0FC45CA0F12C96CCFA399AB71B10F232EDF22FD8A2
7B4F49399899F9B36F0C2435802751012D1B38BA1771ED8065906B2278D93B51
64294112B2DC72ECFBD29297E5710855616ABC9AE617DDFEDB5683082523C085
37B7423D764616D71DA54AE823923816623FACDEA59ABDC7C95E972676D27297
D1A068B63874042F701C0851610047DBC4D5F12492996AA562EA383FFA683557
256328ADB32B23F3657D56B9460EA0497CF7350E4915FD9F3F2CE40726FD0434
64C4A3DE7A955B20B04EC005F7FC1E7674B2145662A00FBE4BC140ACA9AFA127
386DED82EF5D451429C5E09CC487D7E39C0795CB603E0E344DB238A3349E3ED3
6C88CA96597CF7B1591D04D1F83498265F8C1C2151FA70364927A419EAFFCEBB
9CA6966F2239B00F234CEB0D85CB2CA51ED1F45B6A8E55D5056CD811C34A2D25
2142CC4A1DA874067ACEDAA883AD7B973C8231B4529373D827CD1F90171A7C28
5FD1EC3C4FEAD5703CA7A44B437FFCF6A2342559B7D783DE1D7FFB6A35D8DCCD
7A77686036857DF6336259580362E844D3F3D873E24022D265166F002B18BE72
2CD070D26ED07C922F4187119626C82DB539BFD7963155B7CD7A393D488CD9BF
7EB13F93191C1F557938A410704F783DB20433D4DBEB5D94EBB7E42C7ACC636D
A695C77320A05D018D10C669E74CFCC7F38A9105A8DF7AB1796F8D1D9B692F82
988FB103E883A2390A5C1C043406445D72D002ED91376E19E2E452D85D475B3E
009505BC247553EA0096B302E5C87CE69CE6F7A8052DDB9E7AA1C2EA358F06EA
FF48A1B404D7DCC7592AD50B021AA5C61E99C7755A79EF90C2F187413234961C
D2705A647B955EABA5C1C94EAB7217BFB253D991B335C90E256E65C3EBB7073F
6FB9FCAA00E8AE8803E1C111126306FE37FE60274EFDC290C4BC5910220B168B
DEE378480309037CC90C0A1A41BF4AF536622BFD80904480DEB54489208F1D62
03646B669EA649F027D161D9274CC67F307E0748DDAEC00E6F730BE6A4FA7974
2931747A2C1F90D6797529918142DFA7F5C212E1183382BD4F3967E051886918
6F9432D8263FC3F731B48ABE0C1F44934F599FCBB73A25966FD24742C5581E6F
8CD3111F3E19CF3AA12DC22A2A480BDB9EB4C9055A13CCA348CBF474BCC3A795
B4003D8D67C405309C7C7AD0E32A3BC7B23F9376BF584154B392834E2CEE3380
B6A96880A1E9A674ECDA0F7DD66B1E4D29E19DA69A71E998A8C8EFA49ECF1F36
58D09F792A526C669F4AC0A210D5468BF97E90B03652A76AD20B9E68CE364D91
6E1EBDD9057FBB7911699D29010D3A65A3E0573D7E99FD730CAFEB2540BE8156
E629BEDD2D5544E180CE427ADA983549DCD940D43780B2F0E165C702EC42F1A8
B9E544F68CE414E572704BBE4935ADA528C820772866B3E7CFC78FCE9FDB4D5D
F416544A044EAB8316824E45A4292C03B3052E236695FF60155B64E446E86271
1A4AC45E16CE53EED83E01A2F879A16C8E45A8E66305AA0073DF71C95387E4A4
867B1A871E4598DE6F78E500CDF31193358B0E767BE8243FE900C9D8645D7FD2
63C7740D62B743C95600AEF6E029DB9C7D172DE15A45B95D9577DD42A23D71D5
18CA40EA28B830F665AD669178B7353C7E38E933B737A5FE17289B7BDD933961
B38B32AD6C4191B1C111EDAC8EE93CE28FB55F9452D70C617F2BA4E45EC6FBA8
0B23839A02A9FD401F9B5B9365C75E7437D71C4DDEDFDC84DEC83F7F9775A6EE
E68C86F2F24BC71566EB9CF2FB566B99E6256D0CF62EE97C4E9D205C817D59D8
1BC120A4B0A085617A1B84840DD6D44EF057F24B96AFD2F22D0093B49073B7A7
471FA3881E85DC59E1DC1C44474882DECE661A163E33B50AA0CA0ABC00290D05
C48EE6C090CD9CB29932E98F7E02DB473788EAE563CF585414BFCC10AA9F505F
1E7704CEDB589CF8F528BFFC55B6276563CDA2B0FDA062D037138B5DF3C6C8AB
3B1BB5F399B12AB2DD64088155BFCF2E49D81B565542672FFC6674B6B7B5D068
64541249ACD4A09836CF5E394B616FFF6BFDF1A7FB382682AF720FDC657B8CE7
2C8262141030A8D6CDC8F7E1661C4E732946B061951B651CB00089D4C1E886A0
F20F17963A82CDAEBA5E8A9063ED0C635022E6876ABEFAF4FFC0B5041ED26590
AFAE236F487EAAB2F4E17E578CECB33D28357A6909F9BD33B8E0D032C510D14C
6793A264DAEE7F030C946601B71980CBD57BC8FC2BC903F660DA360A2796DFA8
BE9095484521C755AA46B8D17D20CA315F755B0773A9D132A1D9C259CC0D2DE2
38A755F52A4F18504894A5EDCFDBDEFEAE8E4F7D69651652A099047E59652B5A
8446ACFF6B3EE83FFDC2CDB10AC05743787C6FE928927779A2479A25979BE507
7F3C1F18A5857D6AB7B97FB9193A0FE0FABA23E4CD779A1DBE5E78A99DFE045C
3E95DA6D4A356BA7505E149D526DC73DEC3DFC33D5FFB26B9E6237132256E6CC
AF30EBD6A754778C5E95F6CD679BCD5AEFC827F770842F3DF2DD2D299AEDA9CB
D152D8748DB05E21E67694BD7DEFE2913A88505AC44BEDB59BD16B219F3661F8
134B68B1D2505185EA98214C7DF4E321D424B50445758515362A3B0051D65B7E
9DE39ED1DCF3668DF88CF1FD343E6CC38484CF0E0F4737C9485A691D85AA91FD
AAC15B25A17958F6B6700C53BD0619E1DDDD7AE2CE1CD7650E09D0ECD435C1ED
245470B9880BAE2635B2728A340B0380900D75A443FB0AE6D5E03AAA57F7D3BD
62B7FF6005E74835BF87E1EA34FEFFD0224E78920CF1296D2D3279C8F1FA76BF
6B1BE1E876695A529BE95221E0471E4C9C27520812363F64C102BF934E8BD1BB
4A540D5AA0040C0F7D5E711ABAE8C1BBC39ECEC2025EC5C319CF3032520866A5
BE309D736C28EEB33BCC42B5423A05143EB454D990EB6DD235B1A376C48222D7
9552B274EEF30B8A466B9A1F611BA986ABDBF7DA6135E3616A97CB6AC38F5F47
7A6167525AA06C4ED5DE9D845D98858D6C35A17134A4AF64795E70F5ABD9C8A9
1963D129CD732D30DC83A1C94D89AEC866CC3C66C2146E48A408C2C49D462A41
BB43A8FF5D55B5C9A366F6689D7866ED952D26D8B8F3B317254077CB4FB972CD
18A83C4EDCFA2E72081ECB0B2D2EAEB799946CCF7E1D4174D36642F5CBF93688
87D5349966B5B25BDBB46B19126E6A963C091159527DAD471AA6F27471E5A38C
B446383278AEAEAD5BDCA9D8352B7A4C84EE3FF4F5CE09B1E706D383321038FB
122E2D0379BDC24EA64CBDA8EE74E26535EA62E36D03375B98F6DA367E7724F5
E2602FDBDFA19FBCB1518F8BBA7CFE9C4CA50E2D632A2039123AA094FE2D2C2C
85DE7A3D9AF782881290566EDA0AAFA05AF54B1327AA91248E74051ED2FF71A0
4E0518D7E5F5102C4E08F4A3D98AE0516F37856AAA9EFA5EA94BBEDCD3C04CB7
20592CA5EFA6D720004634B1A5FBCF78AFF630B217CD2356BBFAC7BD147ECD05
F98D0B9A788AB4722EB2261C726E127CFFAF8D40EF3B66BE3350B5A8F52AAE76
9C1EFFAE379A88AA76D4B72CAF2BE2519A8D176F9A1BD3970AA68AF65DE0CF28
382C39E3FFD4F554DDB369E46D5185485BC047FBF9CF33353A522674D033192C
19229245364B0E8F1F4DB34B6C6ECA8F81F53E82B730567E51EECC6EB427972F
00DB7AC2AE1ACB17503B8D46BA27304BBF6E616D6C4CE4A8209B7B54ECE8812C
7527374480840030D50F5174D205C451D190BFA8D83D613202023DA0024B9BA6
9EC5ECAD5E77EB12522EEA391A3EFB30B162C8FC8F170E5F32A25E5A78925A4A
7F1247836DE5F1B3FBF2AED56787871B337E14FAA2964A8C2332892F9E23A516
7D8CBDC46508B1FEFF7FB4C4D1582F80BA3A41D5CDB85F276B55C74636AEA430
BE2522CC017F68A6B1DFC6BEB900B52F14AAF887370D27694045F7A12640F841
7D327DFFFA51D3B03BF722965DF17B5AE8BFE95530A48E818D692BA7F6F71A67
1DB17F1F4D99B96505355F0F7D4073DA9E6AFE6DFF3838196F93892F5101155C
C33F8BE094134FF95075ED9A58AF7E02EDE5172005ADA8B9CF1BF4C779135176
C061645BAD80E68C60AE2B58BE484D79DE5BD0F187CFAF2627E1E97EC55D2D99
04996744A7951CF6408FDB232E794C13F8C0C71FE7E1FC9B4C77D876E14873DF
1FA302724239EE143DDA09E03F59BAED7D0A9D0C0676CFF89470FE8B0865DBCA
17CE357FB76211A490E63A0D021DCC850F97C7B7BB147D5AA373651A1E87CACA
F82D83FC759F780AC83E98B40AC556AE4CFFA51F93B766487DC69752DB974832
5A81B550B3BA066F8D54159B2C2D6AFE2EC846D74B38AA27C2A8C36E0A0E2604
234708614CD44C8221132A28962930D392E6E2F898163D803FEFEE9EF885F9B1
CCC4F6BBDBC23E3F43C76CF4F0CCE23DD78DA0E66EA41671F2BEC5BF193B8D83
D659CE73A2068C124CCD363E45091124D25E76EFA60E2FB3C7E1A5A9450EE246
9CAF801E45E72F0194F2F02FA8F16B5BF695603101FD5ACA09AB973D1FA6358A
B24BCE8BF35E3E362954CC48F12E269159BB27F647D24AA0D286246E9F238EC5
9BC7221D96AD2F6586545D404D183FBCF98739CF35C080AF657CE9DF64F634A9
5ED3A4BCE442410738DBC8B90506E6A7B61D6B01263A07DCE4BB98E942854CD6
53888C6EDD552CDE69068110C102CFE606420749F9E392296EE399E6E435A5C9
74B84A4118F9496F4A051B0CE36D50BCD88AFD1692D2A4DF0B4ADDC39C42DE66
A173BABE7A9EEBEABCD82B9DC29CD7972D0CA23AF94372AE8BC3DBCEC940CB98
1E7C3534BFA17E318DBE8DB8D78EE8FB08CD0A5AB23406E2FF0048C988DC5BDD
856CA6941059E64949277C3F8AB761768C30F322BF200E7C756A7015FB68074A
41BF23ED4FE7DC9934EE17F14D046A40FE2C41C0B7FFD41EF7E45903E1C1B678
DD831B627841F8F51E797C8524E54E743C2BC3D0DBC5C20D98A5E937E4D42EA4
640DABFBFC0478248AFE2B0B885A093F5D77A2A538A739735095C68CD0F746F6
C49D7CBF10656D084278E5529F01D8C5AAF245B932C7EAC17C21E90F604DE645
231D1FE4683C53A340A8D74149B6711B0711C842F9037595A5F0C26D49CA0ACD
A62FA64FAC1D2C2A0211217D78DC7EA7700FEFF2BF4677E0B7276DA352AE68FB
1264390B41CFAEF334E967F7EB62E396D313AA936B265B1B2AE1ACE8446A8866
5D9E3A95CFBDE5D9D0B3BF449B174C4E5E89A6EBE37E8D167D0168666672DA73
D819DABE846CAAF9459450B11E939E41FAFD481DFBE899575593AE6B368DD252
B77BD677834E75DADB612E416A41EA5E98A490619928C4F3399D409F96CD6664
FDE2147B9DFA0269C7CB9DD3F4AFF5EBD18EE201E23B8ECD85E9FA202B58C0E6
7025D7CDAB54192EB78439067055786142B2204848C1ABD13EE17D09347A44AA
51350CD6B10E611139F1738EA431854F0876C5186728A863FB600E9AA90C92F8
37E565079F2B9405E7BB09527FBA9D7BCE845B40F6F9A37FD6D84263A3C37214
F41BBBD42F86BDEC997F06B527A1D9E7DD15298FBB74B8AE23C82662D020121D
EC775B55CC8D13649AC9DCA5FA9648DDCC92F7935E7405A46518072EA5C907DC
299B179ADD552C5ABA34023365628341DDA26C3B16ED169A73CFEC46BF1F5430
DC52FCC9B05AC4B18485103AF5DBC734B6000222FD39CFD73C64345F10A508F4
03CF4F39000C0BEBA0D0D594DC37BC009D61AA507B549F9FD29D3410F5A99556
AA4EEB92BD03B2F8867F4A7E023CD331F21DBCBD94D3217FC4C3D7C499142176
DE185D6A68306BD571DB41C1EDA9D58C9D55BA2AE6BBA350AB35F847EC60E7E5
0566CBE05920E0EFC67FB438F6E96FD0AF7464346B5336F28752FC0398B92100
B03B4816185C027BE3275C6B1DB7788D15962B3323743B8695CFEAB50F778176
899DC607521BFEE02C48A1AD1FFA6D41529624022B4192D3B019E7BB7E9549FC
7FDE32413329585702B7D793F947B87B4E75EBBDB75FB7807E64EE010A444CCB
4BBA66C257FDC7770E9761E5E0BBFE531881E7BFBAAA85B917FF7A3E3CC88299
7DEF90974FCB79C399E260EEE58CF38C4A0AE7ED8A107970208C43D23D0CAF49
E92FAC61583DD9555EBD3137E9CDEF6F2C691E9BB8EB64E037B29E3B2334290D
6E0DFF2777C86DDD2F040F4E9300AEFDF7C467282BB101A9654A3F2EFB5B1DB6
7AE407FA29A49C24A3347FB7315037DDA6905134C1B6DB128EDDE3AA32043F5F
53210DA8ADB8C8839C902FE1B99C5E411AB6A59479B20FA745F9507FBA7E042D
953499D3C65116D9C112FC825827FE44DFCD7338CC7F419F6C4858C730B113A3
8E22FD6678A71428BC219CEC13B3E1E0D20135A2AB7E1C939B9212413DD1CFF0
0EE0CD575CB5B980DBF5887CBACBE7FF40B335F7611022C54E22BC080679A809
3E1AC142944D87859CBEACD36857E75C41AD4FCEF7D4745CD1754E46F56D5B86
1127417DE390230F1573BE26F02267EB6379939AA1754B7782F044F639E1E0DC
B3088DC9C8FF6193070D7B2170DFE9DDBCDA23DD44A2146FD7365A2E82285CF3
BCDF7185DC397F157FF3F2EAC98D59382B1B1FE909473D03F3356B965B3BA29E
BEFB2080A4EE41DE0F82D11E07088ADD43DD1CBB19C2DD2E5678BA8C4A4E2003
EB9C2688B7D0ADF58B0BAD8228AC5635C564DD17B38538E6BDAF67B9727E9EF9
E144BA47868D9078851ED7E2AA171839A48F30B817EAD520E812CF0A7F86CEA5
2F9A9127AF7EFC78EEC974B32998CC2C2468B147F1325F7B0D973987F31AA9B8
EC5FE29E995F96119D4E769E6649B115C0480C8027D54BAF99159F66EE7FF980
E8D903C14D18DF4DB8B833DEB0152CCC020562661CCEF7854990B2E2BA0EC05C
8D6897F7FE5F21F3F76784B222503BBC585280A5F3B4E4EE307EBB6D1C1896C9
4A5AF355B06C586161EDA3380903283C1BF7792B8BC806AAC27864EEBE9C6A5A
03745509F0CCFDE654C0B25C62740D99C45E7176140E733CDB4D0FEFC7E88CA5
B548138CC160B3D963AB8187167DF136C8F3DC42007F2B696B83B689AF9B3BD3
A58FFAF3A2C757D97444272CA8E867E7A93A77E63A20146A3AC16434C434C89A
D00CA290F714462D6D01D7BA6E4C8F0ED272C2BAE456491FB19D67879E2446C4
748E3C3A0C00280EC5F4B9D551459C7FE72BA917822A13A1AF73317C1B20867D
B2FF83A9F4BAA8484627BAEC04C76A2DA9C5C22A86899F51E9D4F1A28ACED4BD
2880A775922CC3729196E86E506F84DC9052E0724A3595BC9B10C25BA87C26DA
0108C0B415923A376D76B5C9A32DC0AE8C5B915B2595330ED44F61E2D38D5567
F4CC851F4A2C88F2DD1C810F35C18755D8896D5D86F4662868F2D149D88FEB23
0EF846BB426D456278C50857040C493190E4BF55EE755E5622E62AA22736B448
3DE3D610AA25057DFC9175633BED974F799932CD8C15F5D7B6F3BC65B09A6A8A
4D1EB09A9548B6E4CAE08E09BCC62960B1C123D324CF1E95B3278983523B613F
AA83A25F7DA660466C013A408207420FDF8561FB7CB2CFFF690CD24CD5F8B95D
BE36E7792ED6BB9573A2C60E2A7BE0E1B048513F33D01933A36EFD509C821613
5FFD216A9755D2DB68CE1D6825DFD7B6FFF9A1A0C2D833DA6DD0E99184E45B38
F3DCB98DAEA4779C58D37BB3BC9522A1143056FC9290D1C90240F3CF8A902C8F
E015D6A9F9956DCF4FA162D08749E9F5D07CCBFB7E651BBAED3A83BEE309E86E
111FF5DE40EA28274C5E6B142DB4792BE1137DED16C362F64C4FFFA3D2528B3C
6B55FC91135C0CCF3E22F3121CC4A357CC423248C3111782F61F8D230D8386EF
FFA5D638CB801ECB5B77DC294F69818B8B3330416321BA7B98B1E51E90EA8722
41429D65BB66952CF26CA641FC03219A2F7A744ADFFBA81B9CED10B32805EA3B
A643EB3C884DEFFC5D1FF3DE1723B8CCF5862746EF93E32603151C93D46DD063
5AABDA4DA5738820C5FE08AC9F19A351F4D140D52F5EA0CA28DEFF85BC8936AE
93F94909BF7D16B410B9B0A0E75471C96F29F4EFF8964C5A151E8F3C374AA716
49B35AB3AF1F9B7131BBBC3E45DCD043AC6DDAB37EFC35BA20ABEE40F4DEB89F
70136EF2B4B33751EB2D27B5D43DD1F2AC8788AFB6CCC64C5FC350ECF141D3F8
84CD351F4A6FAC5E8E747E100B31078E938BA1EBD766BAF07D5452043F3C351D
1FAB39F26A581F0479A75F531C02F1E3F4A1D4FE9747C6B4849284DABE6C9D91
358B7B4034D626E5A93B9E9A9175B8A1770DA5AE9DAF1D15C7F53F0AF27FD12A
17913D1E1327F08467CA43B9B5AF36978E3B7DEAE8CF22097D088DDC3502D69E
A7476AFE08AF76934D5D594223B4E0450530D3EC9DC1A89C48F6F6E91571A19F
A1B8697BB5A3647B834FFCCB7BCFD042347B1B94B2CE19071D0652D90A8C506F
A5D0077F57B2EFB18719E45C01ECFC6BCD4843A0E80919099649455533B1D80C
4EE357A33BF93404D9020A0EE999E29813C5C340168EB5B888DA80970FB31193
A2D2EF607442E0E4A1870B5ADE4BDE6988466DC68A5B27EA717558E55C303AC5
84E839919FE81751C301C13F0C14C8F151D269339BDCE98AF536B4CF7B51A628
7A3421253FE1170B378ABF998A78F08F130F33B6069E84EE745ED365E2FA60B0
45B7D8C929BAF996438061B6D875D05DD64439D15A01606ED92C14395BBC4FC0
07E49EB33516A5758AC0FDE08AB0F16E37E44D2726FED95433016B44E7D4D005
6A6AF113089218A1398BD6FF043AB52EF2D122628F5D2D4B80C2D5CBAEAE2370
FFD8BBA28128E25E14AEDDB5B118015961457869C188964DCCD851B86B933C81
B4B5AB3499F386A0BDB6F841A7B9D6586C5DA087AAADE5266860E72B78B6DC4A
4C3D8A2E2D9DC1EEB3550FF1C37F1DA25AEC7F11C1DA7CC863EFD8B0B320CD7E
217ABBC7200B059A5B75FB139EF9EC2778C22BC4B5EFD910C15387FF3D675F63
684096A499EC3A68109520856E8BF65D10368EF8BFC9A7932AFF5091DD4C2EF5
6102EAD3B42A36D7E493ED601548277AD8CB4D04B792FF4CD8A426BBA6AF0260
2C5EF85D705F5CF4CA3ADF21167B6AF82BF0B0977176444FB2DB00349D9F9602
0354D805FB5A17DCEA3E87629BE4D6C9BF0DA356CF413D5EF59D6236D107EF64
462F7F79FA726674F39773C275B04E7AF3C4307C96CBCD7AC6503FD4A1D88DE2
E354D618532B2E51C4E11A8AEA920D7E2BCEB723DA5D5998D22C062D4E758E80
00831B14728F8F4A1E445175ED21CBADC327451FA382A1ECB006CB196C5159D3
F47D23587A697C8E68D8EEC115BCC43F84DE3E1F1506B1B1A8D1800EC094B71D
D04A77A254CC5570EA43BD2EF2DD100C27229B9FDC9B43E4455AC02CA5C3CC80
35EA17E30CBBCB204194CB68F48FAD6D45D40D197F2B248D6131E21FBFBB67F2
B343467F98A62D583E9015B39A07D4409D84EC915172EF2E681CF412C23ABE57
4C14418AC3C5B02A2FF8512195D6F76F24546DA97807980F31B025ACAE2C35B6
C8C610DF5CB951848BD534AC254B2E29D274BD8E7F8FE377CED602A95E0A41E0
1791C80AC32DA86CB6F54F2358B708E2D73ACA7A8D35ECA7FF402A763E1997FC
0B2DC348A5DEC39E6383611A30C2E70F3EC6797E3641AD22AC9ADC3F4D89C726
FA0795A757D0008DA0A7E354FB695CD12CDE35FCDFCEF8DA612F1CB092A4DACE
828A39E0210CEF3AAE18428476566C346BA8EF51B67136B50A5B261FE8CFFE9E
5BDBF78A99C797F2A1DF273BDA286CFBA982EAB41B6A9D3AF200DE456524ED0C
64EED23019417E76B5D9741714002230FECE32C2819E37EFBBF5C7730A881A73
96FCD16D8BBC90F94BCB91EEA74DFFB83389715E318E0823B48EA6850CB69402
5C4EF88F1CA7604A67CAE3F7F9BF42AF59D51E6BEA5DF57C72C5CD76560741B2
1F41E10C291BD97A5550AB5D5447E8308BC34D3AFFC07150A6E4D57ED95C575A
F36E67700B497D5DDDAA3D6FE706DCAAFC6BC0ECD16C52FF98B279954A9211AD
7A2B35771864EFD5A01BBDB2FA665FB11D5287A3304EBF83DA6EA3F81186B9B5
0A5942865D75F4126A9FDBA4980FC14D866A2D87C855833051F3DF8E51939FCE
BE46D7F78C63E8ABB398E7C37639A18E8DBF2EA45850C7FCCA04823E8588390B
4D3610DB371D4E007237352ED31FD969AF03333EE8BFFA1FCBFD7DC4BE8CAE03
C30F49F86416E81EB00ED29E21F7574ACC0DFD377DC8ECDF9A9641C2BFE81BAF
AF159998C520D715348CA7E315FE0196581962C7B5E5C2B74EC78BFB9011A703
9BDE15BEF8C8B941D14EBADEA34F8475BC8B59F2973A536745A23771B213E1D4
6089F6622F4BBEED8E4BB96258AC0B68C47228D0DB62AE2CFDD2BEFAB666AE46
EE73A5AF42ED5B4E0EBD7BA68F2CF7A57FF9C6111E08FE763B85199C434F3BC1
79D0B8CB8BA40C649BC29C911D4AF802FECA0BF8AFAFBCF13DBEB4AE1E0FBECF
38E884626617B0A5ED6738C37DE1C335EBC2ACA991F59FA382075DA4DEC6F634
3D4F7C0831739165946A6B26B04069EB7AF85A5F3A1B59E6E42D42072C53879F
F56AD9B965A2DEE2147E30517E002195D786C058D3484622F0D3A7E62599FFA5
5CFF647BC29EFBC9F51F2EC382323FF3D4A30E73AED138B3E82A0FD76C9D2226
D3F2F6F5E1C748EE3747CBB9F84174E08B633F446228A0530233B4B2101CC751
56014A9FB68999622B0DD790917E24ED27D96F7E92ECAFE81FC6065B8A647553
90B7EAF49FC83E4F44F22756090CAD1DBACBB4CFE35F935694BF44819DA63104
C3D019A96951FDF0AF13E3228F6143E9296F6859B4947484F0C24AFB22149AD2
22D7A0D9450EF2C4467740396C9624F453A363BC7BD96E8F225AD86BAD08F6FE
9700505AFE480D0AFDEE641CB32811827F6757BA7876D87940F762567510EAD7
740EA80689B99E6B87D03BADB972C271CC1D9607331125C58073E8C46937D9F5
8A1FED560BA8D1C8A9F45DDFE89AFEEB5D9F576E5D614999FE828DAC10371ED3
C7D1943E2EFF16C79AD2993143524AFFC556B45AC1ADA313AD5DEFA207654697
C77899AC4844C811432419CA86FD7FFE71E18D12270764FB657FCF474826A069
124A18DD19E8DC19192AEC6670273192DD85766E10663DCC5542EB34A0069E71
8C99F6A67D1A0D7A8D3C4C1FD6E03A55E48956EECA4AC9EA05408730B8473546
8E22F0E8B4FF45A4BD5AB1B5F86346EE8CACF9590168329D14D4E0C355A88773
56900AE2B88D4BF0D25BA30DD528F753D7F00652DC56CBBECFDF7689B7EF6569
A2DF4A2821B663FA42D4F79B02299427669A7433D0F3331176472857A62B2D9E
176680D6AB26113BDDB990ADE229F35F0588C127F919C78986E7D52E23A09E28
E2525FAD087BF04AEA7E6E2FBE5FC2782EEB44F44D03D6E6C9A4E99CC958D6B8
52298BCA7DF5DCF18EE2E4E5AB011371C0C82842DD717578102E945A9B80700B
EBDB6986B4BBB920F3ABBBE9FA57F6C72042EE792A3AB048D11EDC6C4458CBBF
7EB1E3A230AB02D88CA991CB5D6B7BE8872C46C5EE3A749C975BC183B826FBF7
BCAD8901C5B20D83BB0F3FA000DB44DCF9D83F9A199BF150D06E40F808C7B0A8
29BDD0840FC3473C2C942F8CBB30B61FB8DD84FEBE20C4EC724E6FD5E6D728F1
87C67483B15630EF122E14421C08F03D1A11B699FA2DC36DB37ECD19437F58C1
F0A22CCFEAED6935972F727521A92BDF7DEC539D54B6FB61B4715F1779201F6A
EBB59AB4B38DE250F603416EDD2F13853999E38BA2367893E190D6AD6206F981
60CA7C2D72400CACCF0B3DC57E9CD316EF0E840A663752B56D0518AC5815CB8B
4051B97A53FDB6CC24848551555A2B086E0A13D4A14D0EBF899F319CB0A5C8B8
8C617C9BEA9C27F47442022ACD0E9CB11FC76F8D89AB6DB97BAB7CEC7DDA1E02
1BDCE8B0AA0D874CF2EA711246F4B76AB7FE8E71145AD2F618344E5205CC16DF
6159EA8DE7F1C1001D1602C6DEBCFC9AD1DE78619EB3A41167EC29253D695FCA
2BD01818FA7C6E090E66708923532EAA70FE22B281C2AEEEF9174DACADEF80B4
1A893CD47E8888BEACC259C8A2680B83533FF1745E684E9118DA196ECCE25964
555E3E9B954FCDB27CEE0D55B9F862AD9854BA993F8F45EDF0BE35F3A05CBDFA
EC811BB6AF04DB87BFBC791C0AC7952F9F6772DEB8A303F34BA62135B04A28EC
6672F11CC4132D80DF18CA9AD604754FA2EEEE9926F1DB83495F60367AC3380D
141EF858849A4FA93DAB71283D3E46B5AFAD40222024FE78769BABB057DF002D
E7D1985CE37FF81A99746CDBB16E8E33D5A8437B2C9BBF74F21779000A7966B2
7DD4A7327A4C61D51BAF2ECE3FB538118A897A99B036727AAA9FDB941B65966E
7A7535A16AE8690396026123CB4145D322026AD7FE82390CB4B38FA22B3B4C47
A7AB8215700A389C5A801CE37A9A39D066E2685F561FCF081D6915DB655E00D3
ABB68A868D2DDDF6DDF580ADBA288033683F3F3ED20F5E2880A7FD3627B4061A
D59BAB50407542C90BCD4B2F3B751083FF4AC0F95BC0AB926185905CE326B7CC
C97AE188B0856C5EC84CC85132B30DE695221FA1621CC5133465F52DF48F8B37
3C295B4B396D14A28022A747310B0953D5C31B9C310878BF7A39989FE75CEAAD
BA01D0CAD79CD4D17973C88A68DF1109797D11AD4E4CC0118245ABC5AF3F0CD8
FD361322FCF6214778E0CD03C8ED6A5F3E5983838E7093106C21DF2E2D90AD4D
085165DBEDD9266A5580ED534E3E421BB27C7412019FB5E8C0F20F02EDB2D136
17EDE94E280A89038E35D71AB00F9D0EB80B4E6071F4D2C76B785DABC5F42A27
A701D76925314306CD73BA6B04828080AEDB91BA55E87E2BA6B0DB6FE3BF0456
5E84E8295D34031EAF5A77ED6BCE46E6939F34B9824CB6F3E43E5C3A1AD2F3CE
7008F5C151F8AB95D614AF5B072E94083A937B60D5B9E1139D2564D63E7B22F9
3F46B7D37BB8D45286C448A469D60F0A60BB504D523366ABD0E68F2174184202
C33CAF21FD090145ACD9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMITT10
%!PS-AdobeFont-1.1: CMITT10 1.0
%%CreationDate: 1991 Aug 18 17:48:50
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMITT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch true def
end readonly def
/FontName /CMITT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 35 /numbersign put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 46 /period put
dup 47 /slash put
dup 59 /semicolon put
dup 60 /less put
dup 62 /greater put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
readonly def
/FontBBox{11 -233 669 696}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D004D606918A40B8D7BFA821B73E118040992A4
E1BF99740F8FAA47E4349853C8149C0F8BE2F23C6F332BC0373C867D0715E8FA
FF163A60AFD0FED665D5829739975C5DE12EB30895604D211F645D4E13330DB7
64B6E35463C93B752F691FDDC44595B0A0E9E57C6F649809C4DBC7DB58102A60
46349E9A5740893A1BD4536B99ECE72B147B713619037400669C07291022F84F
4F3302F8244D2F0F1380466E81E0B5E00AF33E021A55620A7A93F3BD49C7040A
67C096167F502EF2051B526405B9391B4340A3FFEC103E317E315A88D31661E1
7E4104A2B925D1DDA9586861904FF6FFCE6A8E808385E4C4014F5A494874E2FB
C3758D6989AB68C4CEF82F92B9439794FC404A29D086ED6B27997735BC3A24F0
473FFD74BAECF5282E2EBFCB92D69B81C568D394055E2E30A7E3F448796E4EB8
019AC2E075377F777183BD87FDD194E855ABFA35AFA73304DBB181C267431B16
70456FD8470B525011891C1E140B8FF24A474B89F1CEAAB509F91FCAF512E16D
8413BAC0C664FDCD31245C5996F4883305D3EDF1C8D1E6F0B1E79A06028BBDDF
6AA5B515DF33BA8FFF2394262F3FE1DF95AD661322BFA5179E325BD1B1EECE49
69F64789FF1BE8DE5CD7485571A07471BD6CAB4891BAB122BF1B23D78711E29C
0DF2342B7335C35D0F0805B0A83F6570AB661156D2F8FDD159DAC2E0D429DEBC
C5AB0E396E719270933DABAEEB1370747E0ACF595A6B92B409383CCCB1932570
D905892DD16D2186DDDFD147B12E123AC89F96282FA95D10FAA87C6B65EDDB89
B3CFF6C85E86E42826889A2DCB4533324B933A22919F1E3A186544285D2B8E46
967A88601546413D4BAF975BD1746D540DCEC712FF13DCFDCC534D6BD90E63CD
CCAB6E7EC8910768CE6852C3D4E62E0019F65E53726B263FA1C5CDBEC6D1D583
CC9E461E3F5E1637317F0C49A7A3F88973FDB0EB444C22D3FAE806D247BA4746
0C3F7FF3AEC5EFEC545DA3C50B1F5FF6E717ABF406172318172A9B6221BE1A90
E82B5B63A597B6AB45037B41D7C3BEEEE89F568AC6D7AB07A9FC566F2ABB578D
97FDFD5B0ECA146A396039D66263604CDDA5EEB6B519B75D3FBD9A169E0CA4F0
2E823CD5167B2A230D3CFC3D634C5E0656485DF4C3F3BCED8A6A1B8C5BE7B3D5
0BCFDAD3EE5B903411A4C61ADB903974B5F561E9C38DD32E3E3F4FAC8BAD5365
D3066330DD156A6DEC6737775B00C583AB7C1272DD4E48AF3F7F88CE4BA68075
2EB4395D436F165BF752F47A3D1B53199F82404E472C9452E8A62B7AE45F6595
0B09FE1E240326078E9857E53D71F26966AF22C20707598DF37605502044C444
FE312726386917DA73525A537EA85EB42FDE3D6DB6B9166A5E05E271548FEE0C
ED245CDA910E0CEFFD7B9B0DA97ABD24F67E471E19AB0712EB23EBF27071C6FD
13175EAD9E0E4E0A6ED40C616016D075266D82742D523C6905101A3FB57514C5
6FCF55C8BAA48E2DADA29D403B36627EA772C4F51E4F030C0DC54CE0311EC119
29C978488C20053DA719320852B0ACEA707863219A61C99942A94B0AE7D39A59
D77F0A142A074B3D3BC38AE9587CF085D97AE454AE8AB10579A642CC323F30B6
09C9D0A1139D64495670435E831EC533A744C2AF5949C78D6DB1B882F20CE944
619CD75837A10160BFBBEA0B54E57FDAF5A752CAB70800B145037ECB39B795E1
740759675B79A949BCB2FB22F72394B3F6F03BE1E3CE10FA0850013CE5D4A01A
30CBA96C6EF51C9F0F9CE140C177608E38CA69292406E1859892CF2D4A5754C8
92E42828C1DAA31A70ACDBB2BEBD493E575CD578F34E93504E06AE19DCBDF181
C49FAF98FB6D4243C10ECF1205C3D73B85323DFDC3AE7E4B1A8DDDFA2B6ED7E7
7699C00C57F4B5F46D0A6A1B5DCAE80F9C53ADAAB9A6531B0579C8DBD2C5AAB8
3422DBC26DFE200978FA29D7A983702E009C8D3CCD040BF7630E350D5C3381F8
0AE13E3DEA68255BBD0FC64CEC4866606A49F7E37D6980421ED01013158526B1
493A8E0508C9947FF03B4AA1D6C32816EC33D1B5037B5E7E8F4838F61B9FF5E1
39B00249476C08BB0E6141A3E73AA1B2FDDDE8560562E05887450AB610737A99
BD140E7BF5D692C301AA6097174C84F6BD8D5A4C403F02518B23623CD78B63D0
1740D078F668909F20398D05FE1C17A28B24031AA5282E292C06DB3A253A7DEF
49DAF613467FDA453C0E08BC2EE43A0A03C4AA5F67BF554777F55C9A48ED39B7
5E1D73BC98E31EDDFC54999AEEBA24E02E4E88DEB7B8D7012A4F56DE6ADFE882
35094E47FB3CF04054FACDA5A3DE9D5234DA762EA71F954092805A3996C0FE3C
439D02E890569FB18349FDC9E2A639963E8F95BC4CFCA2DE399A83DD01498571
4DBCAA04689573B02EB196C23A60499148D86DF3B5F9CDCA2CC4B51B38D78725
E3175AF1A87A8A147061B7500BC27348D603DD4F4D278552CAE3C967CB6B7CB1
0A8553D185CA37C0E4B135E1A07FE7C75AF0C7923DBE12873258141ADE65DD6B
6BB6FA400D377DB198AEC53E39F3E07B14F27BC4D088CBF76BE622C5DB937FCF
A772F086A49C55A2E5678004624FA3FF2ECA99A3176A03A784865D27D566499F
C947765805F85BF85ED82AF99C79BA10B9111672504011DE67267AFD6AA8B01A
19038D156DC44473034E12D7E8853B3D4CFB22E1E62F885EC878C88B712069B8
D9F0525E86CA7F369A5FAFEA7C5EEC5841EB78A7B2DA828F9341016A7B9E81D1
16EE6F4C6D981678A028C2B548679FA81BE7507AD2A04A549BDD913D0086A16A
A41100DC8A997F11B8B80C9E1E2561369281D566F8884F8F89A4B65AFD0FC093
FD2D4A2E0DA7BB0AC8F622969E473FFC5D90AA322628ED29FA0B4E1E6B6BECDB
CE5E5BCBF8D1A39FCE9EF00A0032AD535969C765846219DE25B557397058C758
EC41385A467439408043AA44E645D7096F33F7F11DAC2D7B2284AD3DCD3AF97F
A63D8B9A912C3025286DA93FFA9F3C096C17294137809F6D56B5ABF2A275DE14
CF4A19AC2ECDF63397C3C57295F07828C0EA738085839D0E0C7B27AB4AB105A4
C5A13DBB9D80D79D10ADF6E26CCDEA0308C174302F9F62130234B22513100450
EC7D954427B10B2C1CE7BB7EF1CEE203263FF8CB020EF2510CF45CCCC6679E9B
CCB1F1C52CF4682997E8190F3E1D5997FA1FD8C0DEAD71A219D7CF79044AB4B9
4CC919BE14C6C230DC1CDF47843415F0B8FBC7F211960FD6E9AD9B3C78E4CF91
D274C6A05C0E20F7D736FFC09BDF6338A7D8561BF42A5B72C4CDEA40D28BB346
D668D1599E9F5A4A2305065C874D8E8081109E830E6EE994902A23C3FE0660A8
BA3D993F7539A38D4C6F0A8003F3CAFE38B672AF53D41AB2581F166FE3B6932F
C70E53203F76EF91A70E40A1E3A30465E24B47136AAB32DFF673E0AB0CB9D0C5
CF4C58FF9890D8A6D1CC114BFF2FA5DE0139463E5209A922DB87C5D3998697C4
90C95915B78CBDD94F7779A1BFC90510BFAB46C7959278738B9D462BA5539A58
F5F73A08FBF8559D19436E40830D8C354F2BACE05172F6D1EB660186F2D915A1
FF390BF4D2A2AC06044ED665E4B219B4EB6516837B4AA158C7DB4C1D212BC912
5BB033AF231CCBB2DC32230149E0F1B716C11A7905C92C3CEC6B0EAA66738160
9E83C1706315967F28EB18B36C4A41211984B9018E72A2B9737BFF9444D6F2D5
C310A578F5B513AFFE2C00A39EEC31479FEA5EE30BD977CC6F1CCE3C520F849E
DA5340B3E5A3F2417F02C63AD18DAF0BC516EC7B6F22F01E22625428A089E006
C8BE6647BA4B8E497AD9B32D5EE147C3F83D56D1B1833BAAB2FF34A635CB9854
8C1B041F6FA5250F998C333B487DE1ACE8170A3F51E878D72D4D32ED4173E26F
82DF6220E98E6DCE5FEFED4B3B35FB287D9BB44668CF007E5BF417D625F47728
85FAD932D7EBDB6647B65145F0BC925A029BB0B9DA3FCC545D9EEC4668A69F6C
CF93E71C4FF8800538FFA024DEF78898BFB68372BEA1EF2E672D734AF17EA3E2
09502C835C64A3DA4D823397CDF9B0B9AAECFFCC761083808C3DB1934232A466
9FAF94539E4530B85365719F0D279AA037332368818804E0FFD0AC5852A93E10
5541183F6A6C815B150DA7C22CA804EAFED2B8477547B40A71BB269BB6243556
4C5F8F6E7AA85CEA44C09C3E52958F58254A49DCBE8E6FA439E91C597F0F1552
4F1450C9EF22995EBD4E420622E9626BA46ACC8B17A79A34340131C9851B7CAC
77047EC666C89EC32533FB25FFEEB70D88967158454C27309562AE4B6290A90B
CCAF024545635ED16E94A9F9C57B8E01F2BDCDC649E1C2AA6C677E54DE5B3282
2EAC679D2563C1F34788DFDF1388E3F8AAC86B67A3E1EC839230EA55BBB74E92
4FA40C9582E4D9BC33F18CED234246BE511999573D5A9FDF9C6489D19B29ADA3
247C6A14CF8CC9E9B271DAA86CCCD8ED40FB130CC63F8A6ED110E96E74F686B0
3E0492FBF8D7357656A24B8EFEBC1B5B2CD0C4D11410289BA6487E0824B2AFA2
76201F959B5265CF190A947436DFE8A2D4B3DE4EE73015FBB773455D504A3EE3
6C1503DE7C2B1289DDFC5ABA9F1BC7F5522A49F780ED7E36F4B36EA69E9BEC27
2ABFF8C563CE9BA58C6F2FE677793572D8E310BF60E7A2F59D911D4FFB7457A0
68143707AC905B8ECCD19862E8D5F612B80416448CF0858B515878D43C2DE900
288782A2568CE460C228C226A6D92908B235ED7E3DBC48BB451C7B4D2E420975
05B3662ACC81BA067C36815551B7AC2E494E7CA03B80A66BAE9D6F85A2EFF8C0
0EE61044496A61E3DC91C95D5B3B0F75050BEFB8C9352DC83A77B103C9F4B031
B3C4292F824A3867F9314EDE6441C430A8BD9A899BFC3BB3BE8F52F502690781
4EA07F78E94CC571A25F8519DF557C6CEAC14A79ADA46225FC13DF53758D36A3
4F1ED5106192906B2584DC46B97102F1D8B45D271810D5CCEAE72541A887DF66
3B20E7FA2787B62FB8F85E069055528EA2AE8F06664B54DEC92740D0C82FCAA9
128BE34EE27866069B2238ABE7B060D244BC45C40B7E17597CBE2D4167078D15
88CD2914C3F97B5BD26E7F259E2EA66A9E343585422660C5CD7B97E95BBF3AFA
5FFFE24C08FBA79E26045D182C5E0037B8C01C69D07054EB497A008E771A4279
8F54DFF3C0F6C4B7585B57301F207A60F0D52DD7F24924B4DB6E157D6B50A46B
B05005326449A6D2E42BD9647CA56AAF492C3B73F196CD1E7C4FFD80AFF1A896
1E10A0CEB46E322B8D7D886D1E59C06382E9DAD6F2792ACA4E640A1FF2BC6EF9
26DCAF5E59FC122E9E1B2DAAB8787C09ABE9B5DCF25AF8A9D55C1B925F461770
18C34BF385F05A664449765A8C12F37E6F6E28C0CF39E2520B8FF60142C05ED0
5603D619EAD99FAB494407469C7D00259C70BAE75CDBF673843E634C981A0F09
57553490A8B28BBD1065F57B44B18F14E2A2965B3D68E6AA218092B50A42E34F
D124459EFDD54BDDE3C34471AF41CBBDEDA790AECA19C3ACA0F789C807B98273
AA5181F348D1F0046915399CC0E0D20A8E6A809F5D9F86FEBE174DD2475761C0
39DDCFDC49946A03DCA8FDE5D7A5425F36B6FBABBE9FEA8E885BF7FE0ED8601A
2A7EFA943F5F8D2748FE0D4FFB6B1F67A5F82D09312F7F46A487436654FFDB6C
289F3B135DED68D5EAD1942CB761F75F3B317B6AF05BFDF62DF100F62E396EE1
35F0870A29FD4E70E0C38CF9B84465FA90EFB7D51CA9875B1B77D1AD0923DCD4
7ED4DE40AB838EAC50EA238D149AC416D58FDF0D0BBC5A013154FE210330493F
F996779209C42F4F77DB358EB9A01279F19FF5274E5906504B90E462FB00B56D
919D4424A88AD4C3B75F285C573AFD78E3B6C49772323559957944519E7AD201
792536F1E9882BC5025E8AB2C9B8005F167A4CFD6A7E3FE309EEF234A6B1E7A4
79D71D674772EBCB360B1F77BF99046BE20E1D1542481E67BB321366ABABEE07
A8C5701FF65B4E98DC6D4025A6C78EF18BE2357797A55285B4BD2F4ABFCD543D
1C33DC96E91BB25A0A25E342AC77E0408C166C0EDD4748A9D29367024D38C979
3F43E759F31D823A99B81ADDC52DCBC02D85CA652D275F06EF6212912BC877F3
F57928923908AAB49A768B7DBDCF619AA57B2D67C22C1D3944E9199F5B7AB11E
B6E72514128662C91248152BAC83FBBAA706FABFA3A542FD63F5BB0708F427BE
ADA5BE9B5B30CB7B9C0AC1EC85DF5FFDFB4F9D319A59D19DD006B07ED766BB13
762BBDC48460C784A0C1AF93A9AE8271897D596D37F778845EE89AEC8F3A4F95
CFD06C9858C8E6F5AC0AA0FC495E744C9E7F0D1DE01FD0070500A0207E814D10
79DE57E4A0E3D428D5D7062B1D30A10E12EAC0445AE55A11B9E71720086EE899
D2B22E4BE9D42C788693D69B4444F22C77DEFE8494820BFA794534E34C8111A6
5A799452108187D09089B7121E1C97391148E5857D597C637CA7D5EE85D96B93
6A33C8B384B19D3EA781CDE45BF919B1E772A1287078EF6193CD24A088B5ECA2
3D08ADCA4892BD6EDC4E4ABC74036BBFA02B74CC6CE437167B2F50E36B507B72
7ADC91D353D9843C00AA87F2ED166547C92337EF9DA28690A3F1AA4FECFBDD41
328A2DDD8E2E46A3216753E31F87BD3785164DDFD5C5B2B7BC89F65F536DF695
36B9C7B1B734470BEB37116425088F2D54C566DC77C7F7A2F237B6A160F5C5D6
8D9F62A7D201F12EE861715BA749DDC17C71929D939B3D341A54C6CAC17EB320
5FB19395C9E25A0F975468F1EA441D41F3C99BEDD2CCD6AA1B3BAE0840D393AB
EF2667DE3E22A38DFC436B76A9ED536030E7978CDF5DFCB3DC58251BC32C004C
7D0690564DF6AC7B4A6E3F7C1588E3C7B75A97BD6C488471419DA0717170EF89
43125914343D2186DEE6CF985C62D5EC0E773079A0F483BF5978D51304781BF0
C27556E9CA53862E5EF93A8048B80B30A77D8E94BD00FA29A580DE39E5A64F0D
B9381EEF1BB75F0AD1F9D6D3018046CE795A6C7967671CB50D8AB66119C464BF
58ECF76202DBC866857B0AD5FC2886B088F1AD93607E755B6CC627558A036677
6B62BF6782C75A5DAFD6C5469D4BD85B7EB585FBCEBBF8D8B0D1B05200E13D7F
A3EF5313B6179417A12FF6AA77D3F8D99B0257C16E2DE33AC137C55A9C6636DD
AB7FB24F7E15D7DEB556F2CA216AEB3FD56D7F2FF43C3DD7FEB8B4A522550327
CCB8BBA1708A42F65BA2BB4390D45B3DB8672B4AE572B905925AFF1003048E6A
DA2A8D99A4CEFC820BAD236B56F0B2D4625E9B55F57D9116F6911B86D122F3C8
C6017D2720189606F09924D3AA892F492C22C5B3FE1A8C62CE9D50BFF7FB80FE
D9C25F82471F316EE78EBF9FD72629F48CF062B9B8EA5F3A765223F583D068CE
1B02BDAD8C4AECC0D39B1CBA6C285FA7BA63022876C2DC0B1A1DAB8B24702A18
4AEA05E379951C03719F7D2A96CE91E0107BFC6660BDC31D09F81D9F0B749DE9
390750E8448A4645642A246646F01359B0C5DAA50F34993A1BBB39B7F6F5B505
C190EED2ED4D6CF8B0BF4CD6D22D4EB7ECDB9388302485B5B11A76B9233EB4FC
D83692450C7C49B2E9C08A2BD0ACA793BC63FEEAC6F3511026A97F3A88E05433
9DB6231D0E29EA02802B1B3C99EAD70BFD206142F3B4EFDA16DCE46E971E5A61
3DA81B6541C3468165B92CDB1C6A198B92D8A11979E3E7BE4C25714F2311CF57
D62B220658D1E9AE7CD61FE32FB975D50E3E3B259C51B3C1DE00227FCD73A299
3C5CE4D81F7BB5EF5A05728D6CE3E5A0B503C9D0DF531C8EF7BD82D5A411A4FF
AEFBA431D1955D2A8679643016AC6C544E322FFA6BD3CFA51DAC502468EAF6C1
9CEC08D19799C8C8BA8CA6D58AD0FC4821302A415123C6EFECF4AB03CDECAADC
8FBE2EED4ABF71506378521A65AA3E710B7B0F0E1FB51DE58DF7C2DF59E8BD8C
E16F71FFC14A97AC158DD360E2933F64F5690C9631DEFBF17558D39C3081E47A
A073B709B5B518DE16DC6A0068EB68BF9F26139A961D07D0ED123FA55DD71DA8
296A185DADA93705F359A1AD8C2C6521C17EA310EB5A83603CBDC15D58D64FBA
969F01AF6C4691C7F0E448476BAA7BD412C61D4783F1D0FB4388066488F722ED
FA71C6D4BB9086227984E51BFBA35281C8C8B17356EB443D89DF5AEBDE0A7AE4
065480BD94917C69F574CB7B31DFEFB8F5BDFF01AB9D2750B551C31373D4DF62
F344982081B3C1CFB977E83ABEA9C96D774373B8D0DC65C71195BDF7D973CF0D
9FB51D0ABF6A422320030EE1C3194BE6A09FE835B89FC3CDA23D8B6775FFBCC2
5E2F209BFF0F19A4964CA508A2458C7CEBF76444B5EE0D1ACB54C28A4A72A9C4
BF64B938EB7E010B3169D0A8FC55FCC19FF345CC8A79B9D56AFC612532CA6EBD
3072BD7D7D9E581A7CB88821760B769B64923400B304EE4128B6BBEBD202E9E1
44B35A8FAD359DD1539D4F6344EDC7245CF11595D29F2B1DB0A62D12EC3B7009
E91E5D879D7FB9013CE95F7014F6E3EF0AB5E458298D8163D842688AD5CA210A
09900FC4994208B5D4714C0D2C0A880B53DD651656F7AD70DE6E161397E6F765
B7A3A615AF22D4B3C619352F3E4F0F556555D91B89EC21781445A213F8B68F1E
38D2ABFD201CA4ECC28BBA352C5CC700C3D957EFF6D6310F14D019CDD230ED48
7AE110D9C66B46D212CBF433BC9ED438CA1BFFDBDFB48B42E6553EFF5F884BD1
4CA9C5BB866D4A429F7D0E81DA2AA1443D4FDA41F50EF7D24280E35ABF7E9CA6
3495EE11C00E78DFBD9060523AD1E3877FC4D54F949C101646FEF50E08D9C7C8
780EB4DCE61931CB702247C048F22D560501E869807A052F9C5D12B8CB64636D
123024683E5257F1356E77E5AEDF9E08D9B95ECCD35FA465CFDA6939E8BACA40
A9E508A0607519DF3001008CD330519E1804990B8EA14A1C29A8F22F25109E02
2EEB3E080ABF9C1FD5F577A2048CD6F74E7B0BA3DB25006037D4CA286F44E05B
45164F7580EF7C4363708FCAE6B59F8F4FFCCEC2BE7F698AF3EC0516D13F4677
2870F826BB839ECF9873497230D86FE17410C5066E3EE397593EB514B6FECE06
3746CD10D342DFC653AA75CEB7F222B2C0BC77CDAA51F75782EC26C5127D7145
C954FFAB6118103FDC22515918FEFF9D047D9A1F01EC846E5172D784EDB84AFA
0BCF788BEB89B16697906F73C7C3C0DAD1C77F84D2F24E0FB338C1F5C98F80DF
2DFD59F9E31C71CE5D560DF15D2E5373D9905D6222854C4D914F4AA0CA4C9C1A
E4A7254239BCED5D0B3C0639E70410A7BD65E825189E104CAE06B483FA185C1A
ABD462BB6BD64B7369C930BB228E27AAC285A6804C237A22422482C24D6E2B05
BA51DF9A87C42447E0C3F38BC2DBF450F9B77EC57020771CC6289B48C8A96A62
9058AF70E261340638917762E3ABBDA478298E3E95A2F93808BE504D65666F54
71B10206031EAABC8E3C197C5D6D5B649F5103276680AC842687F56AFBA00714
FC93295CAFA2AF95F0371F1DA9EF85F24A25934FC9DBF20117EC72C455796EEF
D3CEB7BFFE3A70FE938081E20D3709F1D3B03A6A1E43023C02C5D44FD54FFB77
FB2D5876DBC9707DACF17879A15BCE60D0105F6FDFB8FCADFBD67DD0C25054E9
D691FBDA5145FA319680B7C27C6054DB337AEAA2F91201D5EFE17D1A904977F2
FDB822841FA679EEFFC61D8B8F8929B7BFC41EEF436861F5F4A60CBD63BABEBB
D176177495726C7D5F85DC7F4124EB97B14DF497536AEE58740AC561CBEF9F37
F1BCD1DF1667110E6BF82E144FF093A72B5EDBF01010D4DB35BF80374A0611F8
37E8F0DBB04FF6FEF7A493A4B11244AE84ED5949D20DEC050CAAB5E4EA1B5B98
5390FC0CE57301E467E2E3DA6AB266AC128FC7B596B607F1951C61EB7D666AFE
0A257153366B880FF8B32B1A3A42A0EEBB5E1FE549BCA0ED30CBB577DE14B683
70EC24FEBC403037707EF903392D3A56CA49FF3082944E9E9C4A9A2421123FCE
D28834E426404B2F723DA61F973115F342DFBEE43FA5B5B3C961ED074398F735
5C0AD1ED248446942E649904A1729F59006F1AD69EF9F66972170EC901A8096D
15BAC8CC4C84C3CD0651E86E3DB8352FC416DB61366963D6918D9CAA7F351C87
FBE0E52FB3A15800581BD3030780ED41F92394292B09DC5AC164D1B0335B777C
A8A1C93E7C3CD7A87C7E89E34FBAD0C27446A4A9E91B3C573CDF70174F8E3520
6029522301793C6ECED786D9BBE8AD0F6085E5FF3DB7B0BCE64703E5F73EE41F
039B6D9B1108C293ECA2D59A11272BAA1B53711E3AB8EFB9064F0A05C3502727
E8567E3C33434549E9492972B82E39CA58322EF28D06D8BDF2A5206A0EE1CD37
D6A6790D1204E01BB1B3C0FBB1B1662107F5A9ABB98A5D26EBC554D5D1AC3CEC
DA8894A97028467F75FD171D660F609123D5A8BCC04D1B28D9C8F7FFE91091AE
348C23617EC3F907AC465CFF8BADC8BCE4A7F63D6E1E3F1CFCC963D926DB5BF8
9FA17CBF96624240E984C82123B87F624220AC6230CADB407A46741DA0BC2C17
F22B702BFAAA8FAB1DB6DDE1DF3DFE67EF7CA410049E05C9114DDFB53BAD8E85
44AEA3015FFB81840E47AA43BB684DCF029B49A3CAC45D9E2834B165BF0A2B12
CB7CB84AC006F4E677F5061FE0DF9228F22109C7D8C4D2906E83351889D9E2DC
2158F1BB50BFE075F7D054324F5375B659F7C2F7FF788F84ED91CCBC8013E68A
3E15F6B3E95B57AEA7C0A56A09494B2E4C68B304D68BA0ACC4FC165D5A8E310D
201386CFB0ED6ACB525C9749EA0350FED64701CBEAC7FF2A0CEB11D543C76AA1
62F516B467034E9EF1CF17D668CC9C4A80B84AE91E256A3A2E6656BE9FEA2058
BA473EE3FF13E81DB3A8A14A96BD4F97156AB18D164FFF9B6FB394B8E00A0C80
49E8B72CFC48D5CB6D598D78306703B09F5CD08538B960CAA10A635A0054AA68
902A025790485E262C7E54F6946425C78DF2D1DCA1C4CDC20E84EC9E77DDEC0C
24DBB26FFF312612B61DC35A202500E652817DC823780A3EF9C66A992107845D
C647C99CE47BAF54ACF477044D8E23CB3968B54B2E1D6A82A9FF2FAEBC130FAF
A22F514ED37233FE6D3116561737426E31DB83516BA7BF61F033EC71C3CD0A61
06E20EF69BAB10FC7F4990FBCC6D9D861F9ADEC8A1F6DCB555A8210B0C17F72D
BF494D9857B3401E4B95EFDC5D5589B2BE8742072B0DADFE69BAF5498D4F6AA0
99FED2FE0CA35B46FA5EC1E8F8B50DE09C7FD985366E703BC76E6483D03756C4
73C5C8551155D24C703B0DD27489DFED8A7C87CBCCCE23FB142C907561E2A8CB
DE7D0E15501EED75123E8274435894043C9890A9263AC0E21B89C022D0B68D2B
7A686CF2D5488EA5B75609C0C395729DC178605A094919B54DC3D8D079C57444
8AE1FC41F791B7D477399830C2A6C76710B71F5D318B46876F10AA5A240232F2
53B3A1601C9B9AA0DE3D03C7CFDE1812306CC34673FB6F475E34694FAFF2DC4B
4261585459C516730D02F36CDF8485B0F6681462FC0AE3EFD3149D1FF6F0C6F9
982F2A7A0FDA54C3625D83C8795A084EC50B15DEFBF9A1677ACFDEB967DFCC3E
4D6D2AB00AD09B825E1EA07C915B5377F0AB0D7979F8F3118E7B55E9764498BB
95D0702F5D1A6F7C3DF8BB637C2A6D67F637A3CE086387C422962C83D4E4DC6C
9DDB554F90249F3DE26BA41365231D31F008A4B7B3AEAD45AB17324935F6A3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 63 /question put
dup 68 /D put
dup 72 /H put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE7DDA8EF33DEB81444316FB3F93EF944D9FB06745BACE4
848398BEB747E58310BBA39C64E3411E624530F2BF04F22CEA7384122E6DA850
F1FFF8FDDB145500D77A97A8BF392606010F944ABA543E1EB498D32C9487CE50
89F7ED4D8217F1F0DB37E3F94A7156FED518164901F83DF3BAA6A0ED3E1145BF
102DEAF39BDC40B3CE28A9BFF70E85FBE7E7CFB5E76F8BA6FDDBAE549A9D2255
05734F3063FAF5573603F2C8E8BCE41C4871F6CEC22A583406AA0C6AFF44BB55
9AB595949C052C711FFDF511E0F97AE2B7914DD0527F534B891D65AB0E87927B
11B512ECA19AB7E93940E390432B667AC78A68317B8515A3BD7800C5165689BE
A06705BC9AFEE299BDC34E312082BB785A7A71D4672A0718D2DB628C48C8F4C1
598B54855CA39F99E493D9130032AB4C1C83A4A994C117F8DA1FCD9013BD4B8F
70DF2B9C4020C09794F67BA6ACF33CF4C99F8FA8500DCAA0FBD7FE0ED9DB4DB3
004A57E094DB56BDDE993E698B82C0FCA2FBE1B11031978CA903F7276BE3CC17
2CFCF94B2C697567A382CEC5F7D1E866636EBA830242EA7FD8AC29E540E68D06
2AFC937A690DCFF6E6031672F7BEADF136B4120A22520207570D513B025B1102
591341EE1EE7F4BEFCC34F2C1A593419A073563ED8B7BA862391160D4946DA2E
A2EE5BA19AC90CBA1922146F3BC09EA6BB3B55B775BB123F2F1EA45D0CF1A6B9
1AFF12AC0D96D100DC5B1BBB145E092322025988003939B48CA8DF17373001D8
29ED6F9B8F812279C49A2586AE0AACCA01B8F0E812D0876A455DF5E7F5921090
A5DCCFA45FB5E375D68CB4B342B12B411F59C6DC3DFAF0DB4160E9453FED3137
4D7C2AD1F708DCED51FA9D84A48D7F94BC0B6206347E6B3A8ECFE707AE1CE415
E99DC0EA8C7AA5973A172D60D8A6E92D305E40974B060787CD4B5AB8E1B0B34A
F5F26938BB911EDDC239B5B325FA7B7ED97CE6CAFF2B624660FD4FE0ADF32F5F
336BC38AB11EC6790DA9A6B6B3B8B66822C8E94A311BBB8AA12DC028A44A2439
9E3AE6E128AB3B7B4667A3DC6B8BE80220CDDCAE9E346E7588B9407421A4586B
3B90B7F9CA6BF4793D9A37055E87EBABF29EB3704418BE6E17CA0E265ADB2D8D
CB336460A64682B4EDC6BEEE1E0A38EC1138D29E28E45FAE7DA033C6B80AD83E
5DB4639370C43F4796B1EE454AA824432F7B742B676C9C34223F813E21B8AE8F
D0AC6373A900FF716EA50AADAE95CA29455C6B0398156A87141EDF9E17207939
5783F34576F7F73C1BD27B0C91F766D62C29639AEF3F0B53E08F9481CB37F3C6
B77DA3AC3C24CF7BF77AF92BBFF6E1972F1A3A6EC8945EB66C9A3D761392E486
17C4DF5166A2852CD5BEE61FC2A8D3651628991A8BE31B66D8AE305CBE032956
88A371E8079035C870690527CC1DC0B24B56F0640E3754F7AA1588CB24905832
140298D6F376A0C8D5B44D3590F3EE73073C3C1AB6B14667FF2FB1505F70A0C3
E97599F033990BAF9E0D9FB22548F6083AAB3FA94AAC86B599A67FF6FE76DD10
FED9C25D2ABEB8300078130DC3D6173DF93B33E18DA7E1C78F3F39776F5985A1
AEE4FCA178ED73BB3EFB486FD0B7BD1799A1F7C8DC9E4260C35F619B82F5A1AD
BB5150289A8F2713263172A14424A47AB062E59EB9E9D8C21DC03C9A719BC18D
50863500E924189B687D092FB01F2A8522D70A8888DBE053B4344B9D94441E26
F7AACF9362FBE3B122ED2FCDBD6146ACC7059C362892358762E7773690147902
7CF13B93FC3478695F4B3273CAF365B6BD8D5400B7B406F26282849986BF8093
3AF2E9AE34F214410978A5FE3E9F1F4BAA16C9E872F5ECD12673243F326E15E0
FB1BF36E83AD0F0D4AD7A6ED2C11EE6CBFB344D34E09AA28EB56D6BA188DD01B
A89B2F80E6C505C24A534CF0D3378DB3CDD79C029B9FA6197662D18F162FC3AD
A74773656D4E86603D79C2DE44B266903ACE976B242EDA3C4A44AA1A42DC8ECD
DC54CF4C1D622242272CFF62E6E443201ED42AF5B0A0B94390D2EF9F6B5B804C
CBE2752AB0BE7EB5835392597D01525A534D7FCA340CF9FB537D86C18745AEE8
A28068B14EA61A556B552EBE70508F4CA4409776F1A19B8D31F10485B78CCDDC
BCDD7C1EA57E88EC6745C7532C631C707D728CD4B41A0E276B5DD10039A60736
3FBF863A30C0E2098ADE62D09DF5CD063DB3A35858D2364AFD4129106F16F03D
DB729A8C9CFE4E42B09CB333CCED00215B52CB327D46750607784C7E257B64D7
4DEF8D03709459C340FE7D52571A630DDEA79F45CD52E5C92B083560DFEFF148
E80940308755EE3B2097C62B1BC2CD71D6BF824D33A7CD3CA4B38A04E168A361
9DB4646F77AE67A83EEF006F4B8600CDEFBA1ED752578418B2C10A2E27EEFBF1
5155AE3A58D9F70ADACBEF12E81F521CD0EDB5D44557EA235058E63C7D6AA6AB
70A0BF1F6FE3A7F7E9E4E3DEBCEFE6F33DC5422A136A6C78FE03C757ECEB4C7E
39E94FB2D69BF28DBEDBB0558A4C7811EB271C402FEE5E9906FCCBC6201B8316
6EFD764C58AE1D4413C38D87ED7D732D0EAC8372F06387F90D25ACB6E555C3B1
977C701A686EEDEACC0E2F04CCFB7EE83E380D11A970D896B2201E739D768984
E82DD65EA29BE4209353475B6872B228774498CD8328D45143B2B7C010F84AD2
90E718C75F335C62D253749941449527D0E53EDA7166F50EE409464C42A1A419
8CCA85724054580FA35C400C50B8EFA9F347378375BFD7B36C10818F515C5433
E5AAC411F7F31C35D2A16AD19B7E21EF92788E5AF2C61D53D0611CDC4D427659
F57B70DF14B6C9B3A42583FD1C1948367C996C398968AFA49A1CC10CF00C10AA
D60765B81CB038FA26CE17E48C20B6E174310AC57F067CA8139A2B39D156B46B
61485C805210D1DB6A929B99702DA1B38898599D859E9E24ED3DEEB436D9070F
CDEA31705BB7021829A2C7916E77D5363E70812EBC5F39278075A4FE1E2243AC
F1C29FCE693DB31FEAB772EBB4497B42D04BC1D32CDCE2D22425EA042D4A3F25
EF0140D7C89016E331256D371FE76B2EEE656EE39CB1F167A5C53692F4A487FC
3561A52F066172D54853A1953621C6A1677448ADEC835E7184D2F9A8391F8434
3DFBCB4AE024ADFA6C171E829D133164CCCFE0BDCD521CEB7D1320C3EF9C6FF8
9B06B2376BD685A424FFDF0AE4B7BD7BD8D2F5CA1DEC904B0D7EAA1109C12189
2A0F3EF1D386C0594F3F7525A96DE3B4352C94547711D83A0E9D807E491C79D5
9C359520D7529240F1B5CC3EAB35298FD16F2F4BF41506416EB23569ED62126F
ACF335766405B9F8443CC73177B84D2105F8F88814FC6BC3868F3E9D8AACF73D
7658BC94D6CFE34FF430EC593B55FD072C29B01E9E89203DD63D49C925E424AF
BF7641483A34BE46167A9FA7B2EAD1786C63695285F95826C7BA1503D7CC5120
A821C371430857EE33037BA1D998EC4F05F8F87B1C182D86007BD34F4FD94D6B
41761BE9D822F17813F40A501344637826691F568A5456FF50B2EDEB1872FE94
37DCAC692905FBB41AD396A771E2087EBBF4514380CF0BB0C0AEDF36F2C58D0C
420AF8A5C291BB1039F34CEA816329429466C09B825F5B0BDE498E5C0B12915A
C5426D9BC641A432AFAEF705B035F3F4A8A4AF0781263D266A792F5A5A9B3A07
C0CD1DC828B19120FE6ECAAC8DE33BC2079C87C7631B8900F4A1E09C55CBA62B
C76E7B981DF8978ED77ABFF8EE53A404FE30BEFBA94DFE5EA511E2D133CEEAA5
93EE19087859234B35F864E1B690E17E72E43E2D858F45308447BC16103B9FAF
73F283AE8765413426396FAB3C4F0C79B843765E63DA1612ABE1647F0B86B952
7D2678A69E21E9482A3590122403FC215B3FB77646E4AE75F13F7960D4BDC788
2EDCE3F3E46B9E60AE4AA983C1DE2014342BE94F8F334B2D03DC65EA548D1B62
BC611F25F8CB805105FA710CC23E3DA195DA907C417C85633D3BE162460FCEB9
8878CF6549E52B3014B9D7813406F68A0781DA6164316E7F68D11FD0DB2A32A5
7B9E0DC0D8CE4E7DD0EC6A04FED8353A2EF5AEC8A7F0B2E33B366AC2C7F90CA1
6E122F7B0814215ECC94F5E302CA9318130259792551DC3011E1527E44F3962E
8DC6269A110A6256BAF50783DB6B7EDEC1B19F98EAC4414A8639FB08B58A4AAF
EA711AD47F122430E10987A971A2194519B23E5060B42DE770165ABD1506FE69
C10E25D8A80759FA5B2DD8D8803070B641FB51DA7DC42B55E80E6154C95FDAF3
706640D1C32771BA83C9B6637D37A9C9E5BDF621446576A0E55323D4C9399D3E
B6FEC0688D6D32C8A36EA2D4DC03ECD7A54B590EBD0767417132A70BED5E78F0
8C56D626591E0AD984960B5D7AD94E34CAC118310F81C0CD1660C2E431B4BDCA
6DCAA05754666A9994104BE7BD2FA85ABF1544DB8EB9A6E5BB3CEBFD2D4CB1D1
11433694B60DC633EC7233B4489C7B695CDF1C1107EA5175AB2407FF03BB287A
D5D5953544019C87CD17E0C60FD8E99D1C50A1AD8574FEE92DAF9E4C8CA4A081
2F5479D9AC6DBC31866E043E5DBB534D0C6B8E75F6E9A0AB37CA47F8B102B6B6
CF816DDDD403B1F0E1C1E3EDABE142FF45958EEC8C26D356563D4E69FA5949A1
B105F90F621B0859585B53F37F2111D82D971CB39234100A551FB68A6484C28A
D0624276E6FE358EBD3CF307E8954E96E97D394EC6D8FF68C850F6B19A7A27C2
17D1DDD8D75AECCD1D184D73732ABB915037F43A9880D4568A5C6A09175F3F78
C3606B9060CA1B0608C51F9BF11ED6DF72C10920B6812D9A0B3E8BD23418C5C2
6612CAB9E6FEB8AEC07A0191B365835F867EE03040694FAD3253F1B13459469D
561A0C80FD5965DC6B49F5DC844B5A1F8A46EB31987E1685B63F26271F6128F9
DCE44CFB675E03BE045D893BFC794424543AEC611F18F24A126A1F2DD3495A75
31199210AA1EE94FAB18EEDAE939115AEBA7362C67545AE6676A1D0594FC96EE
8ECC2298F019D3706C7143F1469D6AAD35DB7034B9CEC6E8545F5CFCCD221518
A8026C9AF71775E385290F3EB4D1A2337ECC9CD32FDC38E3B9B177D35AC058B8
C02FE1B6A171540015E361E0D506F4813A54C49B6432828C54B93AD1C4ECEDCF
05FA7A154A53B453CD87CA4F756D2C36E987644F48EA6E284A774E3D98B0BC1B
9FB4FDD1737543D85B4B24D0AA11A0A27F09BE7DCCACEE745EBD3986C2F5D95E
C101D69610B835399B1F84FA3418B0212965BC37E9472B009F22C63BA4D06AE8
F3CC6B867101744B730890F414ABCA157A28EF19DD1646D507BF555D06FE2168
B8672F69A7D1813064097BD5DF5F9851FD6F0098CC777E5FA20D08AC461686C7
95EB087814CB38E5A5F82754E6275B66FFFA8B933DE47C884220463F628F70C8
6E686B8F29B3D1C878E355F8C25187FC65EB3DB4966ADD8476A2F49BD4A42F95
1C89A05A20594F7825528BD9595D554E7DD4FCC57D286886A7F6C96BF52B4460
4F61025FCD58E511707126BB703AB9586B371E7A695BF47B1A806FF519A56E91
1CAA07E009D8298892744900D7EACB7B55F925C272EF1F245B552ACF26D8A3B0
B69A53E6168B5DE8E49ACF5C845D5CAE9C8BD483419135A6044692084BD4C7CD
E684A813E2DF6E30617BF913261AA38943B64CF4D65649E000160A8ADD0AB93D
42E1D5CD57AFCAA6500E83A1E13E9C9A32F35AAE981C0EADDEFAA22AD3CCD32E
384501C743FA944BCB4BBFA3CE885B87F893EFF7DBA32445564E3E770ADD3A55
94950FEB4D130D47108E8901F4DD16E2BF6312F8896D9832ADB28593EF3D58CD
2CD3EA82C3C7183F3489C5E5736C6E0E2C5C6167E6D1B32F580204189D446BFD
5EBF71F08DD5173002F1162D274C0E20928687CB8B3F32F80FF509018323BA19
AD5E911DEF000CAA32F8E2BAC590284AF56FF86D873FF741F1573895649904F5
D69A19CF39B5E4B770E4A5CD975E83735604735CA593CB3DA1D0427D7D2D0345
6E381AEA71DC8FAF31C7F7A296C1487C988D322AF22DCAE197A2E4389AB1B264
86AFA28697367F707BB16A11A920CED0AD78087B36FFDFCCA135CD8462DA07D0
2252C00F535781820113B240AAAE6E9B6AF78A06C350362616765A82831A1ADD
3DE84D1E9AE6C224F7D99841DF47DDF312A5BFBB9C5B16314761060C52A845C4
98CA096453B42ECF30813541311DE0F1DB829BDECE5890CA8E23D8C553AA6AB4
626EA8DD393F0BFB4B16243CA2EB5685505962D22DF7A985823F49542AA1A9DF
5800EF287226F0774C3F32908B29D78F64E84C3E8A9AF9C6F4D754B2EEC0D880
4BB73C4207219A2E364B370AEA254BDB61869CF452DCE91061EA6131E0F93987
7489173EFB02227ED1753EDA10C2274259FD3ACFA266D8E1593EC46A12A74934
B93C2C7E551A679B029A1708AFB44D375BC66F09580D65B9524B460E45A35ABE
4AE7C8A813D4105A25A834AE38E8C025665CDF8D4C8E645CA48D12BF99B856C4
4993409652596BF0CB757DD398C06C91023CCD42C597ECFE06C9C3CCF5CDBBBB
A45E01A2720C9FAB1347485790324248B2B668227011C59E04085B691AAA192F
F287234D0E5588B0AE9B7B24ADD46F183AEED7E83BC40A585310CE619559BF86
1AA36578319B63CB2656464FCEC0AF14AF3BACFD0C61638C5CF75EBD70172C22
7345C3BCE55CE20E0127FCAFB25072F6D216852043FFBCD52DC7C060D31DF72A
C24C2EB33073F5DFB50969D6CEB1D691E3FAC89291EC88E2300B5D5F6447CD7D
3FF4D156439AAA11582DADAC7438E250AF9FD773E6CB22A8B1EF31C1D35703A9
E029B45F269152053D34914A669C5332AF1DABE31DB5EA2B82795CC754B9767F
6E95785D564ED1AB433006259CE942F04C1E7CE7655DEA4C212F6737DA38A4D3
B397F83950AC4E16CE423D2F151457235799CFF990103764B5B5D8C1A4E42259
63B7B7D5772637FB3B34072C769F673BED400D6A59F71C0FAABD604907DC74C2
B9654686B9BE96A24C0240355677760C6010A5E5F0F6A15E672085264E1A56E8
53212B1C9F24F89C845690C0AB10DBCDE83420AAAB75CA321C87BB2A318A2048
F11E28BFE7EFBC041CF5492E3DF0D212EB446250B0F2F0A331475CE28C97EA33
FCCA1A2C147EB01E1D245CD302D1F4E21A260DA1F9C6C01B5E0624EE2A0434B9
645417BD0F48B2F8657218498DD1A222171BFA9D98C850C5A927A297195844A0
B30771318DBBC066D28FAAF6EC3A7E2FD3164ED55A124A9365D9E26004CB1518
A8C15BB5F58EFB739D48F1AFFF24FE5AFE9D30ADF92FC147A8BB5B81EF4F28ED
54FDD5030BD12A4EEB89257024B64DC9BC0413909F518095E4006E669D128E2C
B3E6B699ADD34410413D77CF17BE990A7A23FD12DD097DE587A5DF193499E778
5F4A37EE62FD8B433F179444586C832AD6D638AF7B62BB367EC1CF185CCB9696
0BB9D440DCBF0EB6DF85AB62F6D9B5E1D9C3C5A106F908CFE5ECED2A9EA13110
AEA4C10B089A976EBB1BB4A52FEA1E42E8186329FF041E91B7A52B3A5F16A4F9
F4CFF530A637172DC897106FCEA865314C47D007ECE093CE813C087AB0AABF7C
CB3C9A2E66ED2BF85CEE758600613BC70D2A89F02DC262BE377FBBE210E9DA8D
43B3E75CD5BE4DDC06DDE8D2074F6ABC4DB75B20085CF5976D4048B4B1EEADC9
12BE237DDDE95B025538B984C3C6DAE80095C2EFC509C08CF7673E9536927869
F971195F69951205038E06BAAFF67F071ED7EED027505FF5B1FD239628FEA41A
EEE8610B380FFF315FDB46896D5586F3AA9B58294F8144BC432997AD97CE018D
6D13D661C3DC606FD6989DE13884B72D312EC33BA7963D38E27239E437F4DB52
BDF66A29A95117B0A2F419499E83843FC5B6A9D46E0E65FA9235ABCBABC41A45
3CCECD131D66F00D29858DED0CCF0D7FFDE405B2E6BF6F2F280259806BCCC53A
91EB8D0FC6FDF82B41CE84641A31E63C35C2529C96878EDA31009368DDB60E6A
217917D58B7EC9D03D8F43DBACE9B5A1BCBFA16A94A493C816A8FD971FB30040
6D46C4598EDF88F43206019BFCD58A4186630DC32C35D0BD82D385A6B43A74FE
AD9809000FE89348E657C4466D87842C87F46220330ADB4857F052155FE27E23
DD78FB4240BC1C687BCFD5FE59759899F80E18EDC782AED4AE80C133EE954BB6
5776805B555616666F60421B96F3F531DB47DA24C90BC018965F9A60E094A491
56C483B32FD92F8A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 44 /comma put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 58 /colon put
dup 63 /question put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 72 /H put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2915A09B
A12788A5A1902F494BFA6D3D8E7D3F21C9944D7E27E35515CC476748B872C38A
7794F06194166B5D36B3EC2F8051182CD39384D734CAD107BBCB78AB4BA5B747
5090D872D694C2B221FA337889F710CEE3C4832F0E863AE5CE5CFA9F510CDB13
BAF6A29EB3361302F199E5BEBA5EC4226BB2EA6DC2A6B60DFAA01B34BA226247
8A8DFBA415D69D5D393B85F0A77577A42C67572685915228FDAAD450F8CCF5CB
4B8F18167336740C6527D0AF5376E5051D5345962D8850F14D08835498B014A8
4AD6081D6C05746E6E54900D3F0272DECA74C2638639C611482700241CD667F1
2B0F3AE00584D82306CF48591F3FA9FFB308D51E99213669B9B543C319246342
7BEA0B63B4F1642E868F2D7091CD4266640493D59EE0C2812B91A9AECD5595A3
A9ABD06303B7ABEB381B3AE35062A2B18E832A4C977348EF79BCDDBE68C0981C
CF9DB6DB23638A3914A119CD4109E5F0036ECDBD1221288147659901302F79CC
870C709EF008121C8BF1808F0B762C64C6D35E93C9B6053B5341EB7FB7AF69DE
A34C89388EF7459E5A5A23EE9A030F2D96880E53B0CA40E9708DE580517C2300
C7C71BC2DAC9E6DF4A7A34853D3CEE75B27097D8AC4AFD77579D31BD3111174E
99ED4A1015DC9CECCD90DF3A026EA8BA4AC59D43A37ABAE704464CEAE8B880A1
939982E875A45FDBA2B324F6676B17BA19DEC0668FA0903791080EFBE8385A51
06F0D7368F312C95A1DF9FEBF39A95AE19D4056867910C89F0222D47114C8682
51128672E769F163962419F81C93674AD964598151E6D7ADD9883AE2ED02E84F
78771F86F6E6B0F6C861CC869D9CFACEB44D134BFAFDAC65FE1EC2CA3CE7A520
8D945A6256131504CDFF0C8E5DF2F732B8B770B7A6FDC320CA02008660219F54
5814BC456EB87F677D1A144C8E708B40D24D66FF038E6613B6C009E2F0F145F5
F75FC6DA326749654D0DBD37C1FCBEC7E6C7F36C2B3256C208C85973D50DBD29
56153E193BF8AF57157024CACFFC95B09D7CEA78FC5A87C6191423CD551F3898
7584FF0A1FB5BE3C53792C33747B308AEF976273C7201E0A472AC0AB184F0085
8967D07BA0D00F65C4AD2397AFA6D2D6AFEB7F9BE5D890252E3968AEF0D01396
D423E449A920CFEB87391F32A6C799234811189DD40F8BC6445666639AB92E89
23C92D9ECC3E2F29E81F2B0B78D039E4FD3535199D0D9E8200B32D1C969D731F
E2C52153D14B964EA6EE87B8A1845719B3AA4795F1BC8301271D6FB6B5C3D1E3
4A0CABE4FE4376DDB72B943EB257D0F19BCB9A6C80ADAB2FEE6CBFE50C949A00
7C1505B3E75D72517437A5867A65C78DBF0F558B252FFC27AC0F0852C0E59A2E
E1B6A959270A6261F84D7CBE8FB2FB3305D117ED718E04DB2B71FB00161211E6
4829A42BC9B083299DC94D225566B98AAF1CFA75875B054DB50E2249CBAEF9F1
01C05E6EDAD36A9AA34F377EE029D104C8DB5008F770BA4AA4652FE4EB5941F9
9B8F99EB791B6DE849CE91F1B38108D91CBD98A1BB7020C06866E1F5184FBA76
30E25851E0F4C5B881667FF6F39E275EBA9CECE29191E6D1C04E57933673FE6C
B10C491C1C9320B007B50BE5BE6787EA88AFCE48607C803DB695738021FE1FD4
AB5B378E0CCE9DBDD9282103E91EFFD6DA5B05806ED97C65FBC69D85125CA8EA
3996DC65D1C9DF710FE43253CA3679BC5BE53469B2112DC118B1C8BAD3056E45
27E68C9BD4F448F525F8B697BAAB29CBF6DCEB0B245C53A8FC170DF7FBF4346C
AEAC8A33E8F731143956F36FBBE769ABD7D59C4E46C097988F1BF25DF8B8CEDE
187181E6710D8B7A68C724AE2AA514948FB6B901D5417E30A4475534F480F0C9
43432067FCC5AAE78A34DF2F3846E422FBBD11D8D6D4E10A2E30DEEC3E30253B
28A6BA7C132115D6B2068C656F88192F42E63BE821E21E2ACE8825CC15845C9C
4F3D5D0187CBB5793B28E6C3E2D249988E12C30BED5AF7E6A4AE77776EADBF22
F98D3363FD3B80C6F4137B3EC49272280ECCBADD3D2A8B2E8B5C0AD7C35EC1A7
87D29F6FD6B43C894EB2E74CB449F9826332309A0C54921EC01CB7297EBCD9B1
C4BA12FD215FC60EC05F8407A98B614F8C43D42ACBA95FE18CE829AAF0721375
9517A35A1D95B7C10082DBFB0B01348CFC7E7C5B29BC1D3465EBF66CB6FE6298
01FAF00CDD80B074711F04A707A2F140B20323B4BFAD02B7BEAB2271E8D3D589
7DF66492645B9CB1096AC49EF495ACBCEF091C20CF0BD3BF49BB4B67DA84D2E9
654E908D5156266ECCA32B8FAA6C55BC568EA76EFA54052692A2574CD9411784
D39E5550720B80633B7E94D53BFFE43280E40353B16C01B5329E2B1141EE521E
EC1760E0D028702328407CDDBC5BF5086FE57ACF7C5CA062E06D8C5F9B886177
60796B1A629F81217314CC4A6B68FA90C9EA61AACEFF64EB92C06ED4CBCC580A
34888661F877756935E74894C7F93E18D74D6C32369DA9913A84C6F801617918
24ACA14F61793220B9B594206DDF08162B4BDD73B33131C31935C604C0CD920F
A0B78DF6E160D72A3EAA1F8AD816F8684ABF3A2FCF2043B259CA3FA148D2D822
286FA494112DE023400DF3575E05168719F5F264A013C93C15A3890C2CCBC0B4
63D13B41C91CFC762111DCD7B880559ED74E58E452E384DB9781CB0603FC0E31
06595D499E2DF6813AE59EE266F29851DB2C8F19CC2A37A98656DAD4A5D14FB1
500FE07156F1C22423E6EE5E546826F5B1180C6F22869C9EA710040F35486070
7E29C1E88CA61A8B23C73B220EED2D7E1E9EEC149AC692B6506745A588160ADB
C4144E3FEF04703EEACAFEA5091F2E0F2B7F155944AF43D0364517117FD265C9
B86BFBAFAE33ECF3EA9897E89C26FA17E7ECE8B27E5C5195BCF702AF63308708
FB42E9965D8D6CCAC7F0D45CBCFDEE0BABEB833F213CA1934D1E6200783278A7
71B4A8B614BC35C33F97379FF1787C6020E8563B173559318F7272D60926E7D3
057F3DB0F1F93578E65D07DAA8DD01735D96BA417C3C418EB2B4F3631EB16A76
8ADE00E896CEF9513C93C799DC59B75BB45110096275053E4B4DE39C0DA9B996
E55BA370A061EC27E5E0BE71330ED7C73A9E94CB9796A1BD314DF49D3B494C0F
F690322321C99C380AC636CBA06609162AE71A1B873014FB2377CFF771750300
801EECA64D0A85C95340EE2E5FBFE234D0C2A6DBF760015CF6A96CDC38A6EE0B
8C083546F1D81733F6C94624B424BEF0D24D40BE241C8605295E572AC7F761FB
EF722068DB67200BA5B7EC4AB9E6D1DCB61F6BDA265894FE204EE6D761D44339
3E570EC85F37D03E1518CFF8A082F6C08A4877D87810451D358DACBC9A78ABFB
EEEA60A6963349B45F50A3D47981F735F52F495292B4F905DD7B0520555E5585
F3B0ADD32838EEF0A915EEA2C3AA0877300D37DF152283B19513E516FFC22B8A
76DBFA5DC10F8F79B8C7D1999D4022D934D6E40E72C9926FC3B1D52D8F859C12
5E8164086A117153D1C60D334F9A41F382402F36FD16B7EF7B45C6B25914EF06
B912CC169F87F5C7E05C1482B71BF7E4A7680A4274CD932EEC68521F02F43680
89D3D5E06779FECAC587BA2C4E2EE5DFEE569C0093D642255D5BD886C6207419
E46CDF2F566F6842BE1A9F1560E3901417D9EE475519980999BBB47739C1F285
F9BD236CBAD36158134A4C0D9C0E06A74403293E1C997AD40490B133474A56D6
0C55550BE09EA3C854D7E9EAEBDC1FBE4330DF60E02B0721B63D49153F1ADC5D
D3CAB42679F39AE1A1526D69617B8BE0C16F4C708D3748E9C420FD2F7679E41D
D80AA92785AEC6FE5BED687BEEF0AFDFFB17CD149E2D8C8B8306D9BE5076D819
7F49767AD8B3F065B19E4A1577C1B0B6ECD535FEF6B2B4F8243D03ACDF41261A
432B74956F4951FAD4D4D19E9B5A35C7E0C453DA5E5C427C3ED863434D908E68
25BD827FE5FD739960E108D87604A5BEAEBF5B54F2E1584C88AF06BD7A8BE69D
7C00E5C83A6F4A39CE4F6C9419FBCFD5C814CB793F1E02A6A2B1AFCB46B55CE1
371E7AD3EEA81F9BA09CF11FFDE792622D13404F424D25A1A42A8F4E2FE8E735
7B5952652A42D1AA11A00C6E68E4A316ADB6678164459F35754C6686057A3081
A141C218141325C9AD1806E4BCD3F701385DAC2B53FF3D8A96BA1B0AEB6A4042
1651FF352C0C7CD4C140E9DA0CFBC7C1BC1F5CC582CC8D87F33101172694B31B
7868135FF23490561029C0C65858A23681BA867ECD7E5698BE510C9F92EC219C
9E1118B0AAD8B3DF64B1CD13B9B2C6B88CB6E088E225AF67C283E876DD23949B
5F4CDDE7BC139F24B8C11DDD00A0A70E106F2DBED065D1508F9549A8C6BD0564
EEB5B2332A8596ECFA6638DB54EB9449BFBBFAD74DDE31A73A097906A0D5B006
9EA40CA80CE9A69A74D86593585723B8CB94F3409E74CA6828FB055523E194FE
3740DF728F7516177B2ABB296563A5FA1949012BB57A5E5EFE618F82B61A8C71
85C8B1F5C31A6D7C9667077E5BDD16FA22094D37A19DB52D9163D5D64C02AB20
3B0835A7067006A4F7EAFF3DF08C5FF7A85600E78306D75A43E3922A7E596979
96F0025D465AF1764F33A65957B38DF22FDAC2B045AAFAD8040A3B3EE17A72DE
DCD1C45887EB39EE211DB3BC2BB80EBD2297F6550E470C0D6C3C1CE9912FE7B1
E64EEE71CBB2DFD298884A5C599592445808F287EAD20A951E4BE260AFD9B6A0
D2CE35E9981A6E33F82C7ADE77617E32BC8ED1B7E1E35EB8F8EB697E614B6041
F3CED47A6729878116882067DEC667288EDEF02933F7E616A1E600AFD81B336E
2D338C165560C629525141D27A0D8CB8C7862E31DA8DBF992C7865313B171158
5A00E3AD23946683465EB888ADC3657969B8DF6F6ED4EACAB15850726419CCF6
C68DD0E82444CFF0F25FBCA2643D34D0F624F870EF73FAF9FED320DCE3723FF6
1CDD35BB67ED4F70552422D309D451882024EE08EEEE72AE14CE254307D89CE0
71C317D31F32D6DAE1C151E5BE09AC7B0E38EF7021E6CD085D8ED6100A88F445
6FE57B52E4C91B40C6AF519AAFFF6F99C4EC629A632AD203D0F132498D4739C3
CBA75F8E8DB1CFCBAE5B6BACFD4F207FEF8BC59CE974F660E1492E4129DE145F
28B7EA47BE4F3FB1C5D55241E5582AAA3C1A1F88BE0F73F00EC9F803A4B5EDE0
F019484284288B06AA64C10A595943102CF47389B2FB9E3FA2A24E2B51FC95F7
8060E39E0454E5ECAD069EB415ABDFFD983E0ECB228F670B7DF2F491FBA4A321
7EE0BFB2DB5BC583F97AB936102CD39101CDAA58CD1775E217C7C4D723E161CC
E32BAA409237F92966457B7F1F65E6C0C4A23B107EFAC518C49364D22DF20BA1
0CE34D8D90538397F48ABB1883149BDB70216263629D692D7101385CDD9BC246
C36ED561EB0DCD74EB6F40081ABBA8939E58C02FE1557F83E2610D5148635072
EBD68E2DB3296E8D9E5B5480E039402230E5755D89278D58ED9DD953321872C3
BF69FB20A4A98CE043D8B9DF3E34CA55609C6F220EC510BF1F2A354EA262C4EF
7D0D7858C75B6A659DBE6E0899B30A14DDD6C1D70ACDA24E8F5D0F6705566BF2
FA6CD79F1331C2B396E2113A82CC669D2D8A6CC757B2EFE1D8B32B0BD4FAC677
D4AC9D59D9D4AE194CE4C198C03630F330D0271D1F6EAE926F6D6D42F9411239
4BD006204A34CD7F54A7F4C3D20D0E6FB848F294A94537E373547E4A9AB71941
9B863324D2472F2CC56C00B0650B029555A5CC8441593A13970623F123D11842
F325315E8223C7FC32AA5EE5417837047411E768715CC89310C5EA6E12F259A1
9510D944ECBA5A47AEB48CBC8D2EF26D054E33821D30F9B67110E5BBEC194CE4
A05E2A09220C64F3C0FF8BBF7EE3B20824941EFB0670219B984512A8919D06A9
5E5C09DBA47517D6E40BAD1E79D91790615B839E2FE7C7085F4035D395761ABC
A3A1B44B069410D8589FBC893AE3D67058ABB91BE0E2BA2B97F6013D36D8B4CE
381BD4574A07CF655CA729DC0D974C0D31A4EBC5472F804FAC954D754C6DD109
67C5478D3E83EAD890DBBE2D57C60A17B3E5D60517EDF5DF616A3AF88185D142
7F4FC0DD1A4D24F4D43EFF8F01062EC218AB055898CB385BBC4FBA972AF8123C
947B69A9EB947985B87B14F804A6131EFF457AEF04BEF185A5D78A42E3582D0B
76F3C4808A1E18BDDFCE9F90A131EA64EBD9CA094F51AC182CE16966CDA1D5E4
55226450E8608AEDDD8CC032F245C39DF8A66E594894281A344733500878BCBF
72C0738B15EDBECC63A17FDC5640B00280D1887F2FD703D824FC10A27CE93FDC
295B310A40920343BBCDCE4C0D002EDB5090D9A3044BE5AE59350533DB8170BB
58CCF6943BFD8AB5A4E6F5E3DFB7E3C97A0CA7D3842025B50667FDAF8800AF23
8244410B49AEC1C0DD84B961A3F4B970A5C4C61E3A481B55B09C08DE3F79789A
0D714E71F017EC20D7D3D0229246854F7948E9016A7A4A0847597B382FC024FC
140F2C01A604CA472A615509D135DF5D072C97F3870E12257224E289140FFE17
5F1912A3415CCC0879190B78BD9713A655FF409A18CCAE7E290970F4DEC04873
6845D4D82E672E121A1543DB079B9BE064FC679783C0AE13683B0DFAAC6D1DC1
07954D1C6435F25DC234C806FCAEE5701AB08B20EC2C83F7FBCF7CA25BDA801C
D48B51FF862907A2FD901AC137FF221D2B43B77FBB1671BF29D89C0DDFF0FB66
005AF23EF448DAE9873F6F5F121877695FDB2D31ACC456D2C32D3E7A8166F569
6C9AA876B0B81F344EC7E2FCC800A04230E8F5897DA5B810153F0FA222E2067C
08D66F57A60C134A5A7D9472E36A68D84898A49843C22DDB156C87EF66259E3B
3ABEA435CF0E2C21374E83F5BC4C91B3AF25898436C65F526A94E3378BD14C90
C2AAC1BDE750EB7651C09C86D7962C3512B02F11E6EE1D64F9EF9AD1DB586921
563239845BB08E4426332B9B089BEAC67BF840E65E265DB2C605C0F5E61787D3
020623966F3CB304CFC2F722440636A395C982B6A3F17E313B175CD1F7DA1FE0
6DBFBB00AA498DEF3446D7264B39EC63EFCA4939767DBB520A8E572BE92F581C
6933CDB6F9F4C0A8C7303A2899250A2FB9812EFE63D09512B179B2E8A01004DC
2F1052ED08E39456D6FBF2EEB11A5179E884AE89B03C50EF8DA647DFE4723D1C
468FC0602930F52BE8CAD326F3E71FBBD9B963CCFEDC86537418BEC7E723BAD8
D4E1700AA5B1A811DDB7FDC379B8B7B3E39B01F589F1D0F2B2A1BD9AF5C0858E
FA78B7377412F4E2D0538810BC8C1187BFD578207FD54E2BF2C8593A78A1F10C
F1AAEC9704EE79C6489DE77185021E3EE0DFB01AB9908A4943BF910034F7D1FA
E19DBDE1B48E0478B722F1974D6F951EB7F7970EBFED18B2C5A72773CB4B2F87
61960DBB0ACA724D851162AE8753A1AD060A3C35C412D029D9990150C3BC50AF
F670E69F5DFAB787A9F808EA1AD4221F17819EA00F14781AC322DD55B001E9B5
0FBA6FA0A8C5C7B357420D4418EB4651197E64BED8E184ECD39B05E8A9C929FC
0EA5BB5EB7934DA1A1CE7DBA0B53D8FAB8B059EF5D914C4BCF2760DB2DDD220D
6D51C2730430ABDCD543C0C5FA01ABDBEF195FAC1249F14F8BF9836AF4198CA9
A0772712BA64259B800224BA64FA348836CB4D3C332C9A9ABEFD49A6BD05CB6B
E1C30E6F2D64B2EBDEC69747905737BB307394A2E5F1B6AA41A1304564F7EA58
E876757F99A83D39745918F019B9C9ED2AA5E143FB27197822BD0BBFF1ACD4CE
BC176E2DBDA807949383C4B0E09E4E20895889D28857B010725D43DA17F8CC09
11BCFECAE4DEED36C1DF472BEA86BF81FD0DBEF64CB5C1D8A381E2D64EB56658
3B894B460900C1525357A25296CB5B6D59378DBDC7C4304C0DB019B8D92D75C3
A568E996CC7586DFADFBDE3652252EBF90170EF2906E25BE105049D0D00CB447
FB963E8340E1962B2BC48D5A624E8BBED72E8E74448905992D22EF3790
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F966977BD8C8D07FDBD
F4D058444E7D7D91788DEA997CBE0545902E67194B7BA3CD0BF454FCA60B9A20
3E6BB526D2D5B5321EE18DD2A0B15E53BCB8E3E01067B30ED2DD2CB9B06D3122
A737435305D42DE9C6B614926BFD44DF10D14402EBEDFF0B144B1C9BD22D7379
5262FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EA4FA1566B96E221864A
45A24ADAEC63F61C9FD18376D3984449A1F998C318A8FE36D0D5020E18A49625
0F3BB603BA1F3E66FF412F6A32433FF8BD2968D79CE4273AD0E0CDDA5153C2BF
F8A46A2244F9394A49D339F763F5A7411A3C29336B21CCB01723705AF589B078
3763035411FE36AB5D744E81379106890688CB5BC41184548B7FEBA08DE7288E
E6570FEA20C51FACE8E8F824BB61A4A038AB817C47B87391611B77928B2565A9
3B27A573C05D36ED01D8F27CB2C793370FA9B90021B5696280A55F2CB6117B64
293EAE0EA5A243F56FD007773CA35DF71F1E219545FA3A158EB85472FDE51BCD
E1D6295A7ADD700640A03191782C2E209218E9CC39B0A09225291E5A11F49766
808B260BEFC3A65A16FA152620B7C95330607ED4889DFC82FAFCE87DAFD85852
3953FC0FC7F8C598D226227FA8C178C10D90A2F26A639CF016A84EE208493226
19D2A191EB40202E4BBD8B743A47A49A74325677D06FCD18F09BE3AF195A23F6
CE4B0BFA4B5028811DEAEF9BDD2CBEA2CC1E405654E8C15F2C96058D5FB62D08
3B34B01F8890C5E4C899D9CCED878D251D8FA3643075590C61F197F6DC01ED45
78B58186C77A59BA2BC1A5B1352805234224BDB528698BB3249190C851203C4E
AAAA60A1804F11F231B80D5BED1622E46EE9D9D835AC8C20AE9DDA4237FDD062
6DBEE6D1DCB6177A534BD7F57BE830F7D382E7B46C5F1C4FECE282AA8789E2FA
C6BCC0D2A2510D0AF33C75006A443F5331DB4789D7271955EF732790B2C3FD84
D08874F4D6587D68A4AC7A720443A30E7D57E76CC07CB9AB2527BE5DD777BD9A
70D647F2C33AD40C3710DB060AC73A98089FB3A63B24AA15B2D6F20435DF3B92
A53D365C254C95D111715C0360199B286AC3E7B27EE9BD962A475AC8E1F21222
9F5DFE6BE659FF8D6E9CD1DB7F2E0EED9EDAFCEE07C29576C0B9E6A273040F16
54D0F42769D2241F9275C28B4FEF4D8F13DB335DDCFBAD989011C95021666688
9F94A2E444ACFA56F9EB814F06635F9B5BE72AE9993954823377978DFE0C5FFD
2FBD7177F474CAD098ED6CC085B19807710498752E1B1E1756419612753E5484
5E1A7C86663F06F2A52EBF52B36EDC68F38EDCDE3A700148DD7894AB604E8238
3B908D8923413B4763CB439B326A162FA0CE680BC44BC8D53EEB447B32A97100
C02671338E5BC43C1873F49963BF1A99ADD18E9C3289A1AE54CF86C1E0ACEFFB
0E05C5D805BCFDEA191005B8288F09D79F54484EA741D84587FD63D6D55FDFCB
97E342993B8DDBF66F5E5B3267A67D4F8AA1241B958496A107DAFA2833CCB7F4
766166603A4795E0BA91CD7E25D3855864E35CA8035295C7D27CF5D1EA5DF3D9
7D92884DA24FEA13FB000280F1872B680E297DD91A97FAA4885CA78CAC12E172
CAE210E6480FE19276DD3E330DB137C9C78BCEBE92A5C2A45FB7D1C659613426
1FA8567A5257874889969E7D312AFB65BBCEC08343C6B27C2CF9DFAE11755D65
5598973B3352F694111565FB89DB0B72724C521B3BC7928DA34A6AEEAA010B40
68C1A87301A1A9C45A9448E0689B68C1243E569B570413F986F082581A071ADE
E60D716C28E52947D5559B1A8F888AF651BC2CCE57E4AA1FD68B01ED74DD60C5
EC05B9FD229F4A879EC56B4505D871E3E0FC2BD8F7D933AA275D05AEF914FA67
E2C1B78795065F13736B770DC867965782A7C2575F082B8CD3CBB491D26637EB
0EE95DDB2340E813E1DE1581502F2E63AE4C0B5F37AB4BEEBFC830644C0E8030
43234D58D22ED36DC0EC06530AEF09DAC086CF2F0C0557EE6575210F5CD12949
5842AF88907C18FC76E14D78C1150077EFDA04297F451C608DA318ECB1FDDDD7
B9644D247C6A12673EF38273E9393B828BBDFB2A6A4DE520E057ACA4BBDF3124
A5E28198B83A84EB0FE8E69CF3BCEAABD1FAD0E7CE5BEB88EA52BC1B1E51F0E8
8298648CA3B0C24F4B8C2C825572FC8172027C146917C9C37945B5BDBC20E7D9
C373028AF70251450982148AD6A7A04C7E61E130917E31649B329D35E2D543BC
A69A044FDD3DF8696D37722DD097E5659DA05BBC2CD57107E999D39A1E4FD7D4
42EAD2054B2F6B72186048D9E19AAC1838091DDA557BF3042BE4963AB6E6688F
C761C0E3298F69BCC8B94E1466C49DD2FA6B7D35B8F22F22F7A3C64E69531B5D
EFCD820FF81F1CA781C9AE7187B2EEF6232AFF4A16E7919675E457AD72EA1F42
EF561E2CB6A5DB486524F2D2200E91C4276E3AE58FEC089ECDED658D07D4F979
D0636C8862617ADD5E6C98FEF84B8B109E2A4A1C158F1DEE8932AC0EBA696177
8CC9575FC73C157CD92AB3B0A38FDCF010EF45AA4A0DF3D5A23FD3B4682BA10B
E8A6633E1F970381AEE497A1507CC3B4ADB03AED2F539E3D7AC9D2AC774D05A4
2C8ECDDFBE2988E9D5924D7BF26ED9AE2A7552B7337D2F09EA742FC5C052ABFC
91264B3938BA8434AC709E7071013C669CADECF6F47D3C9AD9358CDFD79B9EAD
71AB15B400262504C33126F726A997DF557284C49C023283F9142A5337689C07
7B3F29F39C5451BF37674C3CA4E252B2227736A8E9072AD03F2579B0D2C9CCD2
856B2B4ACC2B260F7375330F6430408D566115D9A11F059198DE6C1BCD4BF51A
3D29F3250FC7268C479A0507DBEC0DA1BA494202C19FECBFD8CD23BC497F4BA9
5C3F535CDA16CDE65840559638AF5F39E4FF396409352FF720EC91E22E3B292E
666E443776601F1F3511064BFF1F1284A030C0E2412CACE18EC3EA9A74746534
08B611BD8DB6415FC0E3A4AFF23173C91D01A9FC8042787D2287F30FCA93FF12
D0D4240F0C9ECA6328C9436A52FA0C4D6183164B3C061E0C5197E9F478F03D37
E1B4350EEE78AD3714D47A07B2534BAE70C68D4849978FDC5E7AE7A4D68DCF90
2DCABDE9FF67C8E4EB7FE6B3563D1A215760CBFEB1E85CC06BAEFAD5349DB129
9C89F61DBC07655CAFB804C139649423E040EEB08F5CBCA4760AA88D1599CE9F
E28228C8C65FA53757897CABB9A1AD346188D930F4A6113F4A1AA529EBA87137
6D9F2E57C322272C29BE88DABD660B1149612BF1B152BB89F009FEA607CB18CC
C697119DAC6D12AB7BF27DA45209A0BC77C818C734DD06BF74BC655A03012AE4
5D3C725B9F9AFC072D9C921512F79F2C30F5865C5E1D46AF156D6048B2240249
8A32FC62C0BAB1F996D2B3FF7E701D8D705ACCE0335810307E447A807A64F5F7
6AF45F6C3C22E56A9BB7CF43BDF59B21016E6EB5A9225BDE36E5E686C7C4046C
CB762849C575626140CD2E757683C2C25650ACE15D1186A2317299167BA29610
8311E7A8A8DF3BA768FCA05C7FE72248697B2F8A4CC2B834847829436199CA55
3A31925CB8205DB5EA7C003428286CE765E03D6C4EB39518560138389DE392D6
5F8F6E072311F0592CAD8F691071B4A4EE0C8B5F65E16F3120926C940D884FD1
AAD980CEA02274D5FC6D9ACC02CD228930A4C8E7022E3513B78E5672ED135EE8
08F5DFD8F87995F07E02D5EF56FD8087A4DE0B68355C207783E9CF24FDEACAFF
34553E910D04EF1861E8ED5B04C2B9B2328D6DC6F85DD1A9B02BD47BA768B33F
FEBEE0E33BD92C3FEAF8DB142BA73F51CDDF3CCA2B2AC885DE214DFE4F24FAD9
87A6762EB15F96CFC876695DF498F7C118DA2E080E1B8A7C2C05227B97406F8A
51537D92581CD1D76C468D69E365CA2AC703F5561F4E22E6E53AE73D57FABC65
27426613B6242894068B31FD635A45C6A76419A20AE3600792F33247E930BDF0
1F674B44AF894B8B3467BA7065847E70CE9AB961C5BA4D5F6AFA59E995A3228C
5110E1C0E625D8D3978A025376F132AADA42C1C02AC9FC6A83B4E05C44745C35
BC4978A2362DCCE193E841C219205ED3849E5B0142F3DE13D65F3BBC4D40A3AD
0440C5BEE734A2CBA118842971FF95E6CDE0201F767F009DA7D97E8F59CD5682
6D34913C64F3C696D400A04EF69D336E774336999B24FBAB00F900EDC0928F5D
4E453BC4E306F2368844F0579139E785394208224CD0A96AA5376E6A38CCE598
F33C0AF345CC334F0E09D7FA582692A2ACF91A8D46F9BC4BD1D99DFB2B4FDFF6
2E491D499FD20590EF60E7EF45E31758C6E2BFB378C983883E933BDC9F33A4F8
D739877604F7EFA936BAF3B3EF5BE4AC9E9CE9319F87CAB8015654A4665D0E03
E684123C94D6BADD8FE9B58991F957A0E86D114F9223A8BAECA3FAEEF2A98D64
3C1105330D001473CB6EFD9243BDCAB37827899D7FE01E6D355BAA10163542DC
DAFD676CCF3CE4ED45AE122ED13DAC800F7B1C6DC6229D28AE25675B8C7B685C
5A26EF7A44CA9199F374E42217EA25A9959824183A954E02DDC4D31DC7646FB1
772C71B9D50562E6F8F5A7B690550D352DDCB0CBCE20ED5F0A945C50DC355808
C1E082AF34DFBD4B2CB0301580499B08187576F6CE944FB90F183AD32666339B
F0F155FD8A194712BBF3739AE0BAE0C9CF970A69C364AD0B502A11BFCF832BE2
DBF442967FF170C885446B89EC4F1F82AB31704C721D4CD9641D0F6DCCEB939B
E13BBE84039B573206EE4E92B3EC7CF3313058D18DC73A1989EE453D7717900E
CA74190BE87230725BF06396F56BCEDA132563EAA8452E242017D783FC398C15
2875680FDC484CED7D0CFB3AD0B2F1151488CF7AFAE112DC369CD4EF3980D6CF
C464571A5BFA01DFD504626BFAD222C7A787EAF9C31C157252A4E0DFF19D6E44
6F59E2507E3683D1355651FF586B0A68C94E1C0EAB006618B3D710478F58F832
FADE4FCC1576A3B3597EF9B2E2B49C0D21E6F9FABA07DD681909C5D7CEEDCB6D
11DE61092F619E07AD0DC59BF345CF7CEC9638337B2F33063E2F1956865F53E9
80FB9ED590D492782A316F12D26A8C783ACA8EC75633CCDBAC8080B13644E48B
03870F40A2EA5F3116A917FF6A139F39ED79BEBACE553051B9673EBB9A330473
A02FCA716E72609C59597F7DBB900D01F352BA609613E9BE848A613163C73305
479515CC0028564294E6A5E6C8C5DE835BCA29F03CA5934D572D2D8BDA644A5E
E84CA63F32AAF117623987EE99525F95AFFA4C052AC76FAEF9F52678D9237561
E327533C032FADEE93801902D8CFBB449E857DD32EC0C3C53124BF3583D7EAAE
1D11EA947CD04E215135BF42550EB43C4C64A1B8CA33261FFD5103F82FFF3DBB
CBD8C5BA94AA5A8872956E91C68E7A6F7CA9D7545C18B6F3747AAD1AE7958615
36D00F871BC71A8D3BA9D9796C9A6FE7A75CCF05E7F41561118BBB322B60B2D7
4B5B10D5375ADC05AAD29420D791423B5EE70D5ABCAB8F0E6F4BB58CC2169912
5AA3122C0914AA10BC66C79464A9B81B364FAEA5C0BA9B390663484F42EAB12A
D36ABD95848DD02B00651EF352C3C193C88A2422D1DC0AA4FA6A0F04A8553086
3C7743181C0A7A49BE6302158C4E42889E90D4D9398F01B6B078EBAEC5EED714
FA65184E8C2304350F13A60A76C5DAAF519953BFE0D79B5FF3EEB41F6C37295C
4EAD589AC68183A96D1F1E57920950CF5CC819DCC766E26EFE148D49B3A14500
4D41FFB19AD1EE3BD4AD551BBAB8474B511B70DF826859DE3ED92A50935515E4
7F845384E241F524BA510BB6F49336A2606E25EA26BC23E695E308EB51A9C7C9
40CACA46D4ECB8202890DA50DA0A34D62FE0CD3889992065BCC1E62F4F9AAD38
408B31902298155221C0CD9F121C20F403F7601A4D5718F8CF1A2074276B544E
838C93B6235F8472855F2CF61ACFC8CA78429C448BADE71571EAF408F4A15A7A
229D2528D15A6CAE1696722949F16D1B193D9739D75E880FE1E2F08FFBEA2341
6F06AC381E133CDEBC9095FC10B4C71E04E9EC897209FF5257C5D7587FFAEF80
8ADC8550429D845080035A9AD8391C3452623FE4E03E5F121C1A3A7BC4B837EC
1F947B4BD18C839848CAD746B498EC1898F79C04F7E8EC41D19B7676E7512189
F226D760258E4BF3C80B66CFE3217AE2C6F48680C70A03FC3983C340AF0C795D
07434D532D5A58DD08493BCE6AFFF330576AC7E77096BA88DD82FFB1F465E396
C5870A26F86082B0FCF6C95168C73CDBBC1830C6B46207967A7CDDB7A4FFCBBB
06A61D72EBADF63EDB7AA3CEBE9C9D6DE9ACDBCFBC3472F3CED1E730908B52EF
CD1BAF8B8898F09B6D1456155B5B42F2B8E9796D003CE2C0014127AA778F2C2F
9F043C5604121B812D3565BC35B03E65C9DB01911A567FA27254DBB0B4EF22A8
0E5915FC29D82C5524FC9661D60870721A04120F9D458C16B9F6D89F7320C3FF
B67F070ED4CCCDABE3D8DDAFEC24141ED250C5FEF8C8A9E6FD466A4A8E87A295
11121569A067841B44F602EA79D243C3A4EEB2469C11D15DDFD1879F282651FC
8E33D558792E91079FC15C39D0A24C2767494846764D1165923C1F1A9DFFEE5B
7FDF617EE2F05741D25FCCB17F613ACE94903A49075B3C23222F67EE6501C664
4845E0C872342F26D8FF4E2E70B66BDB9FCBB10149A527D2B8C54C8A2B4D0179
3124FF2AA4F7D45969F0119A5228B8A8D42306BE2AA14586149B8EC173D4288A
3072797D1556B08DCD77CF0EAFBE88C791CD03E70801C7D330B9C83DEEA87D25
78AD9C5C01A3FDD8B83635091C2E85E1E535F726563289147F6E00AAFE3B1E5D
10A82A1DE21EEBEA99712D0AEAB6351D3EBF249A192209F7BECE3EABE740DB8F
AAB1D8200160FD3AD3FFEDB9D7FC5DB67685DD70DA5B15B242246C2047B54388
79E9E68E2F52EFADFAAA9923BD654E059002586F69B846CB324181239011FF4C
6D443AB6B1F71B553AE2B32441631C6D9177C349367A731CAB38F12E72BF9E02
F8F71AE642D38C0BF44887E71001AF0A3A48F40D44D7D9AC9DB07CD39AAA5901
E24DE5BE9DFCF7335BAD08200F30DA51E521FB7B2AB4391E4E8EF6AA7D0FA825
21DE1297B98CCA2BE15A34EBE3892BF25E4914E05821ABE87936174455D59A09
63EA2A876D5D4C979C8ACC7BACBF7223CC9A311CFB52A4E7EFBFB92BF4F1E9A7
469691F88ACE63B0E6D69439CC0629E000658ED6F25882852A5AF9708281DAF4
FEC4F2E24CA46133D427DE299D0EA8245D30788DA22AC76BAB58C1C3EB021E0E
0D1D5A99F156290217E38731DC1005315D06700695ABFC83732AAD077C081CCD
A2B6355007917A9D6581EB3AC37564D20AE2AFCD0F508BAD836516A069C4FBEA
6552A3942B793CAA11D3B293EECC80BFA0FE0600CF4468A0F5B761B86AF2F011
A115D7D8501FE564E2A09EAB030BA289758A320535FA4AA5117072015BD1368B
481F557C78504F73AEE417891F05703B2EF44EFBBD291A77856FE0EDDE0CA7DB
D881025E018CD4A01F6921C3D9E13B2A279F75D758829BB03AD7325E1B467A24
20E524D968D1B2CEA0132D9A846777FF02B1B45D67079EC6545913BFDFBA4F9A
D749BC09068DD8EEB28C7DB8954CBE82DDF1BB9E437435B8E5B0C99F7EA3FDE1
075E587B5518A8A7B8D33C87A4F93AAF98BFA262116AF4221CB2D1D3738DA49F
99A1D54C3FDCA68EE0A71C232664AF5B6AE59F29CC24BCA57C9F58CEA0D4B36D
151EAB8F1A57FB4701F97E36C7E6C21A828AC525C02D35216C3F94A1A44717A7
04B7B92E3BC625BB4199E6A2781CD98BDD70A83E96D920A2C51DE283F43172A3
9C33E8993A46E0657FD534976D756CDC9D17588188E8A6BF7BF73E871D6C694E
4A1FEACB60551A4AAE5DFE785CA0FD8421A5E22328AAA7C7CD9A28084FDB2C99
B0B63783D8810599D5F74A81FA78B443AF45EB3BA1B6B85CB57461D06A946D63
306788DBE94200DAE92EB3798A9FB8416354FAC4D442FB9FE94B821E29A5AF14
29D98C3CC95291607923A17DF24145B6F123FCAF93C8A08608046516A3CD9CE8
BE83082CC148177F2E761F28ED2997CA4B74FA079B6E4E017F55D00078CFB133
A09F2ADBDAA65857B254EE7604E39DA14EB5E3E78D2F1E2A2BB04E02D798BA2C
E4AEAAC1B60EC06112A179A9C63F8F3447AFBB1561980FCA9FD58B08B80BB715
260CB3FBD7582EA8F41DBFB4C5D699AA34EFFD518E63CA83BD0BC481715805BD
0B58E41E245E4AF4B31EC5DCA997F79FA4F1FD157452CACB43719F72E03C11C9
D518D70A8013887519B7B935E62E1A0EE444FADA7919AF3E3A9FA0C3855CEC82
38F0AE53CAB67594CED1802AB6C2CF73858C6F1DE7E53FD1D8552CC8BF8444E7
6BE168AE7F56BDAFAE210C0273F06F1BFC70BDA89998B0F25B4976AF0CB95D14
E6FFA95B8978FDD94FAE4E78A14637A42F3B8F44C239E232785DCB83736ECDE5
15A71DE7A7F00F6A69253992BA40F39192324197AED277971E4081D6DFF66F42
C25B9D31B87001FCDD13D04E2D518E14D8E3279BC9137D8ED67573F283991BA8
EF72AEC11D2851E79D3ACBE8F731F4D55776F0B033C271C8F020BC3F3F4FB854
5CBA7DDDE3A9ADE974F8B95B9AAB19B75E1010AE510A16FA2B01D094AEC14AD6
C66E56750000918A5A813C9AF05450FFE666732C59E9B4BCE8B5F922306E1B5A
1DC86202A83383FE20A467893134266F755357190D54FCC94ACC55124E8357C7
2E8E63DF6846CB3BAD761ACA4E2761F509D9A01CE2C17D5B448FB59DCB722547
9986616B864A7F052794AEC9F8E252304FE00633ED2EA62A062E8B2010172FDB
2F64019CED54808698B7DFF14B36DD25E87ABC0AED113A94AD29B51123960454
FF4964AD84CCD28F60A73F5BF77C15DB8277201FEC30C004E0F0206F1AD3D7A6
458B4B63C1568981A145854ABCCA809D2270862280E7131653EB7061C677AAD9
1478D93A938CEC55C7AC04E6E4C8F7049DA8E9F32B6FC6F4F876FB5D8CB7B321
859634E35A8904255DDEF374826FBC0A735E862612EEFF5D20E8EDFC40ECCA6E
4FE52E437BDBE5402106AACCF3C9C3A79CBBA72320DBB823E9B77826B52366A2
3E8DE60F4C9A30D729CA4747D32838A2845C4BFFA5661FBCE68F3CA64B9B7DCB
8C6B692FE5EA65CB427D95B4F613CEF1E3A287CAE52628654906179CE8156D60
13E162F30D071CF3AE191ADFBC56DC0DFF4FBB2BCF67C18A72E5634D71CF928A
4F091B68798970BC1FE5682C2D5884D4D69667CC4FBE288A18D2D74A349A1B21
F991D1D5C87DB0A6EF88C0C2B79E89F253C961CAEE5EB93F62B711827515B4D5
6B1477A18E3727C3148E4B7F4207617CD50ED02C51D16F303081E649B17C56EB
107C426656E91E56A7B0C05DD12066B39314BC57FAEE10250845FBC0553E6B18
4E7CA2941FCB55FCD63DC56460F06810F4DD720624D03F807D3BCB1E0C5C9E43
39CD59AC7BC8C37F9BE9B8CCE354DBC8F9B2D74959DB096CC9082EC02D76CF28
41BC5EB41AFDC21A0B4D44DA1E6DB81F3BF6A7F2F10D28E12C835396DB7AD00B
BDDC54C0778917AF92B276EAFBD4A4E9D149F573DE792F57F73435EBEC5F3F15
9847B2285F559A32418C16D5ACF28AB594BD8B540D78F5ECA1B5D505FA1C07F5
B84501AEBCCEA57F590EF8F1DEFEE8DB958AE179399121F9C6009D00E399FCA0
4EA23C4BABDF17B2A88D183483F2B2655D865E848F5578C5AC2A452FE3AA40B6
CC20FDC87843E32A25444AB3CCED59945CDF531449CDDA23E5E708694C2A98D4
07106A978B75BAB40C0466255DA5B5AD83C99C45012FE838B4BD2998BD48E999
EB3274966EF5209F43CE98C555C6BC53D6A96624782669BDC7EBE5E1AD541865
F35F0AF8D2E158C477061AC5B2717C19CC738288E530BDA9185568863D0EF5A5
5209E2F244E1BFAA724AACF7AB6284FC3021302119F4206D4CB904F29EDBA252
583714D6A6981B9ACEA54C0C251C62908A60CC9134AC48226997BEB4AAEB4410
F23E46F31D3D69958B30E2E2A96FBBD21ACC02DF93389299F064FD583380C080
1CF8A78D628E8451FEF9DD2682198C67D33E0C2347228C12DD09C4F8E965BF88
D46D74F4A849A628B40C983870B2B3E1F693BC982BAE9E6B05766EBD9C5E4492
20ED9484EBA726FA52BE48FA88E1E6A2577F1234039ACAA4D22FFEF5782FCB5C
4B14E4EAB901ED27B5C8AA590B868662CF8FA6A6492AB9FBFD83A0E20A69C441
72612C017AFC7057B2B8E4554456A22B2433C0E7C3FBA9F0F3D88F72D414BE89
C5C9B2E01EFA9646BD7C924B93CA78D26B6CF594813F99AB52DC0BCC0242C08B
213FE3AF7BD341E60CDEB06385951C33C77FAA1FC7206B484B7642986D994D05
814EFFED3873F77193B2EF98235BA4B3A924839ECB65D5B7EFF0AB4A314A8787
246B8E5AE96BFC071A5C708A6C6550145508F6DF8DF4E0BD4F4BE41BB80A193C
87253381981B77383F869FF1F5B0DBA85BC961F7CBEAF8800103A0B9EF4FF065
7F61EBCFCE3438767170241FAD11296F0EC26D6C74C363401D8249AA5265DC20
DF8B858992FCEBD2AA727381C516C314FDFDCF500025DEE2434777E6DCBB85EB
636688C3AF586FAD34144BEB1C122054324E347697928D82588B47D15DA8A505
F966DD5B4E9A22E6A9303C332E73A41C5E369B0FBC1D9CE6921B7A63E59072A7
98D470C54D1E4DBA8B7E35B95C76A312789EC4D5944AD4F5396F69C9F3156E2B
CC02F041CC5EDEA6A0D77A8FA66B33F8B34C7E3A58B064033C7B56B618A1B8B0
8AFA9FAB1BBDEA3B58512C89C8DDFEF4DF37E0B2E62A233FCCBD2238C9D5FAA7
EFC8417A007DF79883BB6487A10DCD0DE7C213A90A1DFCBCFB1E0AF748CF40DB
9038D486C965E68D4BE6E452C7727358C8BCA287A4A753D4B835820C75F2CD78
C1647E073EE32355F3904D6FE35C27C3BA46E9A1D883660A7953E3B03D607412
1CB9D7F9BB2862330A80F27F53EE33C4EEB79AB52EFD0C7B4677C94BEBC7F784
687D527CC95CD4A2BE658BFD713C71C1F222FD2DD94EEF2F0C09EF9C58DA6424
BAC97ED9D6D1F710D81B3286AA19EF6DBD1D776D45BADC537D36CD6663B5C076
EEA8577FE9787FECFE9DAD3E7C0C7D432E978F904505061271131780BD31D344
FFED9C2D950FD1A99CD80A807321A6B4FDC6BD73FDCC4AFBEA405E64903F451E
1A3241E6B1365FB5BAE7DBD241D0AD14DCA87953D633565239EAE763DC57DC39
B3D28E59D3633EC10B1F27210685414BC869847A2E2BBB4E881BCC5F35F354C4
A3D7A734785F76637EADC6DB543C701B861C8AC3219A7E531E6684CD5DD63680
5A5AA62960D85DCF2C8BB8B269E710B9A5D78D2DA6CC21FE979CB5492370AB8F
5886A63AA95FA7EDDBE760107ECA0E4735C274883E255E4415E47FAFD09C87EF
919258D16DEEB5912C7457364E4FF1C86D7882C471CF63166CC4F62B8C4049CA
4D6608B4CD17A157DFC4AF13285C572B31B056FD1AF2013A3B774D651BD43EDF
6EC803AE2D46CB03DD09BEF9C8E86AD56CA7A7D0931CA208687CB213445A1868
021E28A50B5132774A69A9EA6E7D0110921771CB4153B74305A0FFED1F6DD011
103C896CC3D81D739596A7CB92781BB6185ABE1E2C0EA05998F33AEDFFACE7EF
68BF11B57C259DC4BBB837C48A91929F4E31410E26832D249F690AF2D9D6EE7D
6B48B9C4EF1EC9AB23A501ADF7C78721E1D7D563AFB4482B9C0EAA38DB794D7C
9DB044DBF810836B8F73413E25E956512D583E0395C2A62D5A773A63A90EFE8B
3B18B5FCA06CC062792ED19528B014EA8ECEA8801FFF8D69B00EF428B748DB9A
DD92D8156C8153EA09A2066EDC1C07D51F9A9ED86063BB5CB6011EF6556F8408
89753BA8688E8633A5639122CFC4428C3E456A6E42952E414E014D5221AD52FB
F6C5D4A39F1AD6566E25C9B98B98120D0114B4B5854DA9B42DB08ABEEE0E6620
4DD03683C96302684D6B7408747B296219A573BA064C25EDBC5C0BDF217DAC6C
AE4AACCF11183AB34EA508F860879F7A945A68A2F4B79B9CA547C558F4916B2F
148458E9942670F428F3F94D684BB3CB5576A88FF3D03F6D1D1071919613FF6A
F6BB44F208571E4CB59B2552F309ABA1BA17533301CBF441EC04B3647296C6B7
251E3A5E85D38C92095E0B51F08B471AF05BBBC63943880C927D71EA858CE41B
EDD9F46B4EE5CD65106F32C6426F75AC3595BC6E9981C1FF5DC2D52E33E27D69
2022C782BB02987508ED21B056CEC750D9DE0463F8079D73D50B03FDB2D0AD78
5AFFA834814D0D2FE83F1059A3D0E1936037ECE5C6F23F5F652FFEA8119960FC
79B56958B3784A5E5EC3FB10CA3AA723B4634AEA88D691BD201096B67DE12C2D
7FA36D24494AAC8FF4C282BE6D656758D4A474DAF645122C71529BCC0167C5D6
F83B03B332563DE374EB4A65111F21D0B4C076DE59427BE239B0FCB35B592A51
18DF8A90E157358290472D3BA977EA648854B2F9E0CC2CE1C83401EDA6F59797
E6CC083B5BAB91BD86C2E88E45A6D566DC58B413B9FD611572FE8A17DCD987F1
BB9580009C002FF81FCEA75B7957649895B9D734A99D4A1B8C680F391926A98D
634F8DD2E8F6FD949E8E877394E1AB57F8B4BCDF7629D33C95D3CEEC8E4D2BEE
ACD5572F4FADBE51FD3830041FD8A5E945F4D0582D6340AA478FDFA937893BF0
2E6636224D5C62B16040F49A58A2537267386FFE5B7D15A60601DCBC97E27DEA
CE22059AD4B9012A66E8DA3436B0DE89B862F0DC033A2373900BDFB1E6468E34
8E4819265DE54264253348FCD102BAA231ACE1684E878A00333FF03DA1442C1B
F40A8FD81E0B290F28F771F99F053BAD7C5DC2369115882E091F2F24D8BFE94C
0135508D9AF21A005BEC789D88404A3CDC8156AE89100C243BF99AF613AC2C9A
E5E790260BCC22104468AA9D8820D30E7253609F323AD9C8DEB20BC0713FE12D
C731D9A5BE296E93F94389E9D86D4ED306F5483FDE0DE3344445B3365CEEDEFC
204D1840479C4AD2716B852DBE2F706F1B2C45522F1A83E5A76B9D8BA2E007EB
8D2C7A15E1BBC29B683D07F7A5B1EC9679AEFB55EBB0DB8DA63EE90098E3C24B
25D55C0429A094B73421A45D8469D3682E51BCBCB0881555B426F833457EB4B2
8414E223A92C79FDDC36750668B1706A29350219BF1C55823AEB9867FC272C5E
E0217FE47C9AD4CEC5CBCE4CA55E0A1AFF56823FEDA1A66A00DA58504A7B99EF
3F0F82BC9F3586752424F140198781C056B8D0416F09688D39CC41912A7FB884
05527A073395AD04FD4293A4DCE48A71EA0627F9DCEFC48B76E28635FFA74E36
7CBC5BCCCE7C4B036DF1A4F2E515705700C496F51AB1D37FEE5B15B96D7F1836
DD464E867F61F62700C9D1853DD74E658F66EAA138734981B178D34894474273
8E0556FC682EE35512605D5A93EE95EA72E3AD584BAE3C87A48D0C5290579D85
4723A97DD6D13416291151CC556E37AF90A2E1B519CB15B8B9D29BA246DC14E4
142616310FCCC69A34F56F122ABE984B611C303F22AFC8B850E4E10642436B82
0BE21EDC432038EFE7EE4535352EB10EC80713FAB7D4B200E809B61817C207F8
6D60094C005CCC7C7CD51442BA9C2E4EDAF0896A24BB31CC24D1E7115ECA971E
9DFBD1E440F03B66C4EC47FA576311A22E9A24AE2BFD13A1D0057BB617E54F67
92DAB20F979384C085069923EF448604C5930FE09455957232D2BE1AEE3E7A82
81C9B027B021B5DE768877E63DE92148A4200D0069691AF3B40CFE9BA0C5A77F
35EF72DB277BF58E8450B272A02040E233296173B83D4864646D7E61AAB7E1EB
2AEF01B4CBD5737258B6484F1D0F9DA95D245BC683F10ED5A37F4018F047ABCE
6E098A7D8139E81B795861196F178A08B5900E389A799D73CA060122589F430F
C6BC01AC34
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 47 /slash put
dup 50 /two put
dup 58 /colon put
dup 70 /F put
dup 73 /I put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 104 /h put
dup 106 /j put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 117 /u put
readonly def
/FontBBox{-34 -251 988 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671CD88DBFBAC1D
2C0969A0D6D489525BDABC9BA436CAA4759FF48A28D27C335C11DFA3BB816369
97BC35B62D99D0866C00F1969B84968504E5DAB40B91155A12A8597F692495ED
F71359D9C18923C38E0A1D73FF795C233290DC74172033463011F120972DB138
2C9B13E579F31EDB65BC9AC66E0BFCE5118701545EB8F0D97EE2165875B5883B
FCEEB9AEEF6D954CB1A0D3B5F908E77ECEAA4DC615585A867810DF4970B6C5AF
608AC3D2CA4D86F2E4FA097FFC254A3DD26E0BF360BFB3A0A2DEA6A0FAFB640B
64DC744231D8F1A497A319469EEE4B34006DD412E1CAD2268DE0062B1C6D4437
8987A1A9BC6091E9D272AF459F2DE1A0928B7BC5179BBC339DDA143EDF4455CC
ABCE446D3FE2703A72C6CB2E21636857E0F78AA93C265EF7A12A049F45E23053
62B5B280DB94F6CE8C868FC12AD22E109C978303F5D3442D476AE75FE008EE54
24593DCB6835B9166A8F0E1E612CB4B5EE6A0DB9ECB3FBC3CA2B4AC56B3402A4
4A2DA8890C2CCBC0E6641E8CEB377E5FE0FB34D05FE6ECB757AA31EA36EDE30A
A5BEFF4DFEC80D1FEA3A1247782559B5920736530614E372DC954516EFADFF6D
2265A4A3451F519C1A7C08A1D25C0F6A2830E7BCB111BCFC82200CF76A2C3BA3
6705382B4C0CE8B75C9F0360D94F69A1B22B03358AEB1480BCE7A750D1A9DB6D
DC7252AF7FB7DB9FBF1F35E668D97D8B95C16BE00465E5B74C80A0141FCCBF73
34A9009F09CAA9B4A2309370F324F6A0600A060F7568941A90A9070C685CE6F1
59F7E282EE2920E8C2AE2A616907F23E333DB516A7E50A25CC28EEAEC68AFF42
E63AC254478241F91140A583F9E133343C4EC0BA7904A6872D6772C680D109EF
02499AF1D2A39C043E87675A0C614E38E11DDD25C9A23E6265C2A0C2C791FAF6
5E04FBE6765D1A62D96E07EDD7C5E88DB7BF57E9CD28A99A4FF338757B430D82
2204ADA38EE53829C93F3784C8008FCA75595753703EB4537FF3F91693192757
375C0BC302A34B048730049D62C0BC001E6658A8A41BC56EB5C8286E4C98A7D2
592DBB325FDB3E0F979B58C2B521307581FB65FDB69868979EF8DE959FA52FE8
863AD6341E76AD668E99C9C7E888A682C35F500C961CD8286110BC318844D817
811244FBDF04F982B2315ECFC217E50EE04736565F90398C70828543E9815002
22D32456B4F62ECE7032EDFF844A19CA5718ACAB1042DEFD55E6430B2FEAAFCC
9E0F788ED28E6BB3A85777F06CAFB892995494B4D597F55ECAF4C67C96B0FD08
D0D282077028FA8C685F019CBA08B0AFF57D0155B5C3934E5994D6FA65A97373
552781E9C29A0FFC139169A649BD06F9F8F9FDEE4B610FC53E128E7E9E4B52A0
78110293F4C8E3143D919EB6DCCD161C4C2751F7E6D12F526521D16A17321512
7E771A00F5824523C783C02DF1F23C065F75CB15CBC570D4265B915A59FB79DC
09C7E76D85E1BE5C05387585FB736F599F253BB25546D737EDE1F270D571704B
F28F601BDBE2F5799D71B8D38D19CDEDA46C402695A41EC4B6A00B14B4D8BC5B
61C532D0733BC68D8B492C3DA06898941A76D07295FA4CDFC10D2294B60004AD
A532DB886D8E0C2C664F5A3BD1B0F80C1CF723C65234ECB62A729A9FDC3CC526
6FE94402C227619C625712CA1C2DABD951036F903E27043CBB8FDD58E1A6B2FE
67831058C54B068C02D64CBF1D78997E190C229514A6167C1E2281502D51878F
81D6B1C43EEBF1F1B2A3532A004ECF21A026B18AEFB32456E6435614B3416F66
DCD579C7EC208FC8A8BF7038E3208E7A5C74C4C0ED1205E6182D740011A534B5
8A49C37F43678D523687747D0435011960B7C73070E989E03FD13F25FD9294D3
0EBD0DB0504EB2C876E7933997C92DCAB0A23AC15068C28E9F1FFBA23846FF59
B3C122181A10783F55E528ED9DA2D0EA5DBDAB36705F50C0CC5E7604DB38D2F7
E23CD6172343124B0481FE90FBF945708B9D671C31A9B5C65AFDADF48568BD89
EA24604DB82095022BEEB0124EF8E76A468EF343D6FD1E551804493E5E43BE3C
8B2C54FE6B47ED6E253706DF55B9CE8C488F4E607612F34357D01556A538E85F
3319EB2ADC1A5174193CBF1BF6A06EB12B9D993AFD6DF2C2BAB062B4DFDCDA50
165238A3F3280EF65B8ECD2AFF26381B17CC1AEF8EA611BEB8E4FBDEA57A8EDE
A6DC4FEACCC70C536E10B23AE5FC644F8E6BF998A0189B5596C66AA420D86690
D76CB992D277E261910A669CF0853C437B6E31677B96873F8D5C27CDB1A48CAD
4DFE58AF625CC1E2382EF8CD4A0818F9C28C28431C0952DBE4361D6EFB0EA88E
10912A791278F27BEB471D546B7CA3AEB1282C226C1E6A6823F503CB484A077A
93A7EF27FAA77CC0F33E70AE2664C6FD0A0031E38C2842CA4AAB94FF37913871
3C2B14EFB107CFF37E704F9CCAC844AA4C22BD1F07E707D46F835688BF4E9070
87E2786E9D2FB95C14AA25FF573F339C651C9404EFA96CE20F641A3E80B0C4A5
4E846095EA77BD8ACC5FD0EE9255CAE67384BA690D9C5C6CDEEBF8B78E1B442B
3C358ADA76963DA1BD872C6E7A7292FBCD2F24518C7B73E27F418043F626D0D7
94371852BD98AFADF76F738F34D879CB16438996C81557587F344ED7B2647194
A337D80E9629543CCFAEC501463A5F74D4B2005F9B625555FF5645F9A7E51FEC
AA3E03DBBE91F190522EF8E15A1283921EFF7B56BA1A1F89D5095A92C311BAD0
0327AA9FD278903ADD20EC0CE6DEE496CCA70BB9122C65A9243902EBF0EBD790
1F175DD335FFC08DABAFE9410FA94228C4C6CAA01499A57C6870E051869C32E8
D71A00D6BD7F58188EFD76A7D46F63E191DC82FF28ECDA6DE7E6A5506837181B
875F8B08DBCD85C3B79D32EB84616491324C3525007F2F6ACA4D765C7C3D347F
1D4C297483E49B267811343E9684B4168AD75A687588CC397CC4B256DC28F626
A35D1FA3B0DB971F98E458504332BF0D1653040BEA0C173BF37A793BBDDA69E5
2FC7443113754FD88CC47E7EC5BD77E37E514134C578F1D9ABAF7B3B91B186F3
F84B2AD339B73CF8FCD7A2C215B2163C18AAE43B07FE1152CA634E84D31138FC
5C9CAAA8554B3367FF71F7A720A26C9DDB74D3EDBD0217CA91B4F526428ED2D0
7A1B3C042C81E62326B5511BD0D90BA9368D0D1D9718BF784099D064703B2344
B945CE6C67B570E18EFB055F90F27BDA4AEE70A0C7BAE9B92F61C6604A1D7EBD
32D29D5D6C8A3079F826EC56663C17BBF1CC8A10E2495E22342846EA55D15E88
1F9730A45DC483EDB457E5D9F7BAD06DB1618737AA0472688F1C5D1D0C941E52
40DCF02AFB900046DC04864FCEADE7186BBE03DEA36AB6FC36353BDCBCF86926
558286BF2CF610CBC49902473DE2E36786CAD94161A2DFF6A99257DBE5909B84
B5737D46031B4CC9728C04ECA6E8C3AAB94E03C903CE2DB733B047DD720EB867
DCB9DC945EADC9B769198CD631BA7A0E5BF4F5ED435E22DFAA9B8239F874D539
DF96B1C8B25274BA78A8D42127859C25FCB096131280ED426DB47C04BABBC41A
7D3EE4974B4C75EED2A34B9088E76AE0168797244DED1F80CD211A9394B4ECE0
A8A6BCC0A07F049D29AF8735FCC114B3D969EB4DA4953C3793947D3BBE0A937F
76478D62606B10FBD87D0828F4711769790742C38E5DD382DA37CCA6B0257753
16F65AEE1D714F5D7F7F70B06695B918C805E0C923C351573FDC170363D2CEC1
6B024EB1806DFB59B33B7067365CDE76B473B461B4AD94B209792802BB4AAB39
8B1EA9A4FD0B9A992133DCF0705FAED62268E59874914AC8872AC89868F756CE
254DEA3951404F2958427A18D0410EA694F86D97D84C8ECB76BA10FCDACFBEA4
CB93B7F9B0929412B676813F8C9B6A36CC26D058F14C9DAEE69D7ABA39A222BD
974F3B5CC00E5F9489EA9F4B8E2CC5575655A4E3C080A0E0B1309F6BAF24910F
9F7D85D49441156D831739E0D70E61BE30DD662B715C1C644F7A1BB8255857E2
29FF3A8C95662428C257A3E89309E28DDA822330ACFE170FDD5FE9043F542E2C
9A4F2B3556CD4AD18238CE23220413976C29FA771E1DEDCA0A0B775F219886F6
0DC7B82158173BC4DE61C99A290E72845C0DCC9F9DBF1081E1DDD5325C2C185D
09153BE5CA642342E9E3916C100F087DC3C4C1D009CA2B3DBA0886DF27A95973
13A662178191B8DDCFE533EBFD70B903B35F6A52EF6EBB2413D72C986AE89026
3AEB05BD032E267AA566C1256A7CECEF77CDD9DF6CDD13E3FA69B56441E86996
28984C3B33E0CA34826790B40E1BA989751A182677E6BEC2EA21909775A710A9
2505165B503DDC0811E7420D7705382C31373DADE0A7D57CE224626FD7D08A23
394DEE6DE3524F105581C8773D0D7BDDC01B0BF59A50CCA1E7C8409685E410F5
BE7339B52BC0CA09DB6AFF859D1FE418731DF565C08EAA6B84D990AF50F5AA60
9475D3A04B1286CBF3D5165AE12037F25D15C3B704C1E0FFD23E263D0661192F
462FFBB3B9A5B05AC355C8670EB659F2EA6FECEBBB700978701D760D3413BFE9
3504795116A41459D490797A5BAA16FE30CA98835FF24FE3CA1AB22A7F4E371C
CB26438E2E673D8040ABD8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR17
%!PS-AdobeFont-1.1: CMR17 1.0
%%CreationDate: 1991 Aug 20 16:38:24
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR17) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR17 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 52 /four put
dup 67 /C put
dup 83 /S put
readonly def
/FontBBox{-33 -250 945 749}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F075EA0A10A15B0ED05D5039DA41B32B16E95
A3CE9725A429B35BAD796912FC328E3A28F96FCADA20A598E247755E7E7FF801
BDB00E9B9B086BDBE6EDCF841A3EAFC6F5284FED3C634085BA4EE0FC6A026E96
96D55575481B007BF93CA452EE3F71D83FAAB3D9DEDD2A8F96C5840EAE5BE5DC
9322E81DFF5E250DEB386E12A49FC9FBF9B4C25C3283F3CEA74B8278A1B09DA7
E9AE4FBAAF23EDF5A3E07D39385D521547C3AAAB8EB70549756EBA8EF445AF4A
497CA924ACCC3DD5456F8E2C7E36946A5BF14E2E959895F7C94F49137256BE46
4A238684D52792234869EAE1A6D8ADF4E138B79472D2A90A6CA99E2394CC20CD
3841733046175B20CEBE372327BF13428EED6A3E2FDF84C2DBA4B0AD584EE9DF
B51828D3B8F385846158C29C9AC3496CB9692DD10219697B2ED4D425C3957FD8
C4600D76E045C561216EF05D38177243C314877A69A1C22E3BEC611A2EE5A216
9B7C264CF6D1839DBBD78A40610F2C0D7C2FE09FFA9822FF55035AD52546970F
83EED2D30EABB1F303091EBC11A5379B12BB3F405E371519A53EA9D66174ED25
A2E55463EC71A97BE4C04B39E68112956117C8252DB6FB14AB64534B4BCD568B
246DB833982B38CDE7268BBF74B6B0C18091E1B1F87D32D66F4DD023D1F10D2A
7736A960F72AC01F733A11023832CD68FB6288A5977743F781214D8FA9C0C3F7
80001321D4397771F728FD9EE57CFE7D9192B887EC883EB1505068261DC40089
7B7D2820F06515CD74513521F6397FEAB3AD3572D9A8269430E407E357422461
1785FC2782047F4C0339D79B16862D939F3A37F78E4E2174E4FBF132539CB760
207999FF86F6A3EBE48EB0A1CA635450FDEEF79EB16D853F3BF4B0D37EBFFEE1
9E7A64D3313B6B7963057DCC7FC5AEC2498BEBD8371666428A83C75920212E4C
678E4FC0C7E39A398A1D0A3D1223D8894A48605C3FD1F8CC932A477DF0DCC6D4
0F882605BC0D03300EF8DEEAF314806B5811B96E5EA485CC4B57B0DFF94D9C0D
FB8A3BC11DFE2118247B6C17B109451DE00945309756FDDF2E7F9D53E551B5A2
0B0820A73BD3F7879BDF3546BB87F744B77AB3725AFD3AE5F809A27B2563B4B5
4122A977ADF79F4DB1BB599929AC91F69D0188C7147FFA5C31E1115A08474079
E013E4279B4E7DB8F40CFFB61381BA5B2163F2244DE15830C86A1AF4AC929A91
62A623FF150F3D570061AC43CB722412D97E5776F979E1A5D2B2D85D3A10D5BE
A2FF7CC6B6E6DF05E17A708972E3AA872C04A97A5904DA4216EE60976B1F8A5A
323671CBCFCFE1399B757CEBFA2A5F524CAF6E10EF2792716C13E4A04B58A19F
7AAC28BF150842348A53D63714E597DAD6CB200CFA167835B8275BED9E8BC0D2
F5A1CBB04D690016174298B82183ED7B59E1924F50C07F34530D9E06B999E988
D6AB742625C41F216BD05B493A0069E53897091D94A0B95E469F1F8AF0431F47
4CDE816F0D91D287826D9B5A35C751F731EEB2E6C7ECFB7B5CB24AE1337792CC
9E061E239FF2918C04C00002A084C4D11EA6FA03217CF509C2AF0CC8ABB8EC82
ABEACE73D0EF0BB604C53196164526E4EC5FC5B98E669F8F5F6C6BF9052080AF
4CDCC118C505B595DADC4AC88CC06C25E30F620E704C2F8A0F5C4A2F6A7B49AF
554B822ABFE1A7E799223167BF1243BAB42ED45288C351EF6F3DAB1DE869F8E8
28C73F946BDC75FFE75532528B762B8F006D2D8F878D2A93C104853522867C0F
3932F6336F75318237711B61650DE5584DDAAFAF8BDDCECC62DC403B51CA8FFF
1F3963314F34AA24FC947BBDF2FA5D0D35F722E889D483A759AF8878040C01BE
E21FE2742847E0889DAFA3E347518193694B39C8DCCA40796DE6BC5E1F584C57
9F101F495BD47CE3BCB18F2941A71A2748659333761A74868F4B302585550566
C978AAC553EBA5A8665CFEE78DD605A7931DAEA2A2EC95E050
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (example.dvi)
@start /Fa 130[44 1[44 44 44 44 44 44 44 44 44 44 44
44 44 44 44 44 44 1[44 44 44 44 44 44 44 44 44 1[44 1[44
44 44 3[44 1[44 44 44 44 1[44 44 44 44 44 44 1[44 44
44 44 44 44 44 44 44 2[44 44 44 44 6[44 2[44 44 1[44
44 44 44 44 44 44 1[44 44 2[44 44 33[{}69 83.022 /CMTT10
rf /Fb 135[44 44 44 44 44 44 44 44 44 44 44 44 44 44
1[44 44 1[44 44 44 44 44 44 1[44 7[44 44 44 1[44 44 1[44
44 44 44 44 6[44 44 44 44 44 2[44 1[44 44 11[44 44 3[44
44 44 4[44 35[{}47 83.022 /CMITT10 rf /Fc 134[50 1[69
1[53 37 38 39 1[53 48 53 80 27 50 1[27 53 48 29 44 53
42 53 46 9[99 2[66 11[75 3[73 4[45 10[48 48 48 48 2[27
1[27 44[{}32 83.022 /CMBX10 rf /Fd 134[71 71 97 1[75
52 53 55 1[75 67 75 112 37 71 1[37 75 67 41 61 75 60
75 65 9[139 2[94 75 10[105 3[103 97 1[102 1[64 4[37 5[67
67 67 67 2[37 1[37 44[{}37 119.552 /CMBX12 rf /Fe 134[44
44 60 44 46 32 33 33 1[46 42 46 69 23 44 25 23 46 42
25 37 46 37 46 42 9[85 2[60 46 3[65 1[76 52 2[30 2[54
1[63 60 59 62 6[23 42 2[42 42 42 42 42 42 42 42 23 28
23 29[69 46 46 48 11[{}53 83.022 /CMR10 rf /Ff 138[54
38 1[38 1[54 49 54 81 27 1[30 1[54 2[43 54 43 14[70 54
2[66 76 5[35 2[64 11[27 7[49 2[49 47[{}22 99.6264 /CMR12
rf /Fg 172[88 15[115 14[79 2[79 49[{}4 172.188 /CMR17
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 3258 1378 a Fg(CS)52 b(411)1240
1714 y Ff(Pro)5 b(ject)34 b(2:)43 b(Implemen)m(t)35 b(SSTF)e(I/O)f(Sc)m
(heduler)62 b Fe(Octob)r(er)27 b(30,)g(2013)p 0 TeXcolorgray
0 TeXcolorgray 150 1957 a(Class)g(MWF)h(9-9:50)d(AM)p
0 TeXcolorgray 0 TeXcolorgray 3067 2200 a(Drak)n(e)h(Bridgew)n(ater)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 150 83 a Fd(Con)l(ten)l(ts)150 326 y Fc(1)77
b(What)32 b(do)f(y)m(ou)i(think)f(the)f(main)h(p)s(oin)m(t)f(of)h(this)
f(assignmen)m(t)g(is?)1046 b(2)150 568 y(2)77 b(Ho)m(w)25
b(did)g(y)m(ou)h(p)s(ersonally)f(approac)m(h)i(the)e(problem?)40
b(Design)24 b(decisions,)h(algorithm,)g(etc.)100 b(2)150
811 y(3)77 b(Ho)m(w)31 b(did)h(y)m(ou)g(ensure)f(y)m(our)i(solution)d
(w)m(as)i(correct?)44 b(T)-8 b(esting)31 b(details,)g(for)h(instance.)
236 b(2)150 1054 y(4)77 b(What)32 b(did)f(y)m(ou)h(learn?)2562
b(2)p 0 TeXcolorgray 1929 5349 a Fe(1)p 0 TeXcolorgray
eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 150 83 a Fd(1)135 b(What)45 b(do)g(y)l(ou)g(think)g(the)g
(main)g(p)t(oin)l(t)g(of)h(this)f(assignmen)l(t)h(is?)150
325 y Fe(After)36 b(man)n(y)e(da)n(ys)g(of)h(attempting)h(to)f
(understand)g(the)g(k)n(ernel)f(and)h(wh)n(y)g(I)g(could)g(not)g
(compile)g(the)h(giv)n(en)150 424 y(k)n(ernel)30 b(with)h(the)g(giv)n
(en)f(patc)n(h)g(I)h(got)f(an)g(understanding)g(of)h(simple)f(op)r
(eration)g(of)h(the)g(Lin)n(ux)f(en)n(vironmen)n(t.)150
524 y(I)g(kno)n(w)f(the)h(in)n(tended)g(main)g(p)r(oin)n(t)g(w)n(as)e
(to)i(understand)f(ho)n(w)g(the)h(sc)n(heduling)g(w)n(orks)e(in)i
(general,)f(but)h(I)g(got)150 624 y(more)35 b(out)i(of)f(this)g(b)r
(ecause)g(of)g(m)n(y)g(troubles.)63 b(I)36 b(no)n(w)f(understand)h(ho)n
(w)g(to)g(access)f(basic)h(\014les)g(within)h(the)150
723 y(system,)27 b(ho)n(w)g(the)h(di\013)h(function)f(w)n(orks,)e(and)h
(what)h(the)g(big)f(deal)g(with)i(git)e(is)h(and)f(ho)n(w)g(useful)h
(it)g(is.)150 1058 y Fd(2)135 b(Ho)l(w)61 b(did)g(y)l(ou)g(p)t
(ersonally)g(approac)l(h)g(the)g(problem?)107 b(Design)352
1207 y(decisions,)46 b(algorithm,)g(etc.)150 1449 y Fe(Our)31
b(team)h(w)n(as)f(ha)n(ving)g(di\016cult)n(y)i(getting)f(the)g(k)n
(ernel)f(to)h(compile)g(correctly)f(therefore)g(our)g(time)i(to)f(w)n
(ork)150 1549 y(on)26 b(the)i(actual)e(assignmen)n(t)g(w)n(as)f
(limited)j(and)e(w)n(e)h(had)f(to)h(implemen)n(t)g(our)f(solution)h(in)
g(the)g(\014nal)f(three)h(da)n(ys.)150 1648 y(This)f(led)g(use)f(to)h
(p)r(o)r(or)f(c)n(hoices)g(and)h(w)n(e)f(found)h(a)g(similar)f
(implemen)n(tation)h(online)f(but)i(after)e(lecture)h(on)f(Oct.)150
1748 y(25)c(I)h(had)f(a)h(b)r(etter)g(understanding)f(and)h(when)g(w)n
(e)f(lo)r(ok)n(ed)g(at)h(the)g(online)g(co)r(de)f(w)n(e)h(noticed)f
(some)h(ma)5 b(jor)20 b(errors)150 1848 y(and)31 b(w)n(e)g(decided)g
(that)h(w)n(e)e(should)h(implemen)n(t)h(the)g(en)n(tire)e(thing)i(b)n
(y)e(ourselv)n(es.)46 b(W)-7 b(e)32 b(though)n(t)f(ab)r(out)g(doing)150
1947 y(some)25 b(sudo)g(co)r(de)g(but)h(w)n(e)f(though)n(t)g(w)n(e)g
(had)g(a)g(decen)n(t)h(enough)f(understanding)f(to)i(implemen)n(t)g(it)
f(without.)37 b(In)150 2047 y(the)28 b(end)g(w)n(e)f(probably)f(could)i
(ha)n(v)n(e)e(sa)n(v)n(ed)g(some)h(time)i(if)f(w)n(e)f(wrote)g(some)g
(sudo)g(co)r(de.)150 2207 y(As)j(for)g(the)h(algorithm)e(w)n(e)g(to)r
(ok)h(our)g(understanding)f(of)h(link)n(ed)g(list)h(from)f(the)g(data)g
(structures)f(course)g(and)150 2306 y(applied)f(that)f(along)g(with)h
(the)g(new)g(kno)n(wledge)e(w)n(e)h(gained)g(from)g(I/O.)150
2641 y Fd(3)135 b(Ho)l(w)59 b(did)g(y)l(ou)g(ensure)g(y)l(our)g
(solution)h(w)l(as)g(correct?)102 b(T)-11 b(esting)352
2790 y(details,)46 b(for)g(instance.)150 3032 y Fe(T)-7
b(o)27 b(ensure)g(that)h(our)f(solution)g(is)h(correct)e(w)n(e)h(only)g
(had)h(time)g(to)f(b)r(o)r(ot)h(it.)150 3367 y Fd(4)135
b(What)45 b(did)g(y)l(ou)g(learn?)150 3608 y Fe(During)27
b(this)h(pro)5 b(ject)27 b(I)g(learned)g(so)f(man)n(y)h(things)g(that)h
(are)e(barely)h(related)f(to)i(I/O)e(Sc)n(heduling,)h(but)h(I)g(kno)n
(w)150 3708 y(ha)n(v)n(e)33 b(a)h(m)n(uc)n(h)g(b)r(etter)h
(understanding)e(of)h(Lin)n(ux)g(in)h(general.)55 b(I)35
b(can)f(get)g(around)f(\015uidly)h(without)h(ha)n(v)n(e)e(to)150
3808 y(c)n(hec)n(k)27 b(c)n(heat)g(sheets)g(ev)n(ery)f(other)h(min)n
(ute.)p 0 TeXcolorgray 1929 5349 a(2)p 0 TeXcolorgray
eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 150 83 a Fd(App)t(endix)44 b(1:)60 b(Source)45
b(Co)t(de)p 0.25 0.50 0.50 TeXcolorrgb 150 325 a Fb(/*)p
0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 194 424 a(*)e(elevator)d
(sstf)p 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb 194
524 a(*/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 624 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)h(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(blkdev.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 723 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(elevator.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 823 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(bio.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 923 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(module.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 1022 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(slab.h>)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
150 1122 a(#)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(include)g(<linux)p 0 TeXcolorgray 0.74 0.48 0.00
TeXcolorrgb 12 w(/)p 0 TeXcolorgray 0.74 0.48 0.00 TeXcolorrgb
14 w(init.h>)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
150 1321 a Fa(struct)p 0 TeXcolorgray 41 w(sstf_data)f({)p
0.00 0.50 0.00 TeXcolorrgb 499 1421 a(struct)p 0 TeXcolorgray
41 w(list_head)g(queue;)499 1520 y(sector_t)g(head_pos;)p
0.69 0.00 0.25 TeXcolorrgb 499 1620 a(int)p 0 TeXcolorgray
42 w(direction,)f(queue_count;)150 1720 y(};)p 0.00 0.50 0.00
TeXcolorrgb 150 1919 a(static)p 0 TeXcolorgray 0.69 0.00 0.25
TeXcolorrgb 41 w(void)p 0 TeXcolorgray 0.00 0.00 1.00
TeXcolorrgb 42 w(sstf_merged_requ)o(est)o(s)p 0 TeXcolorgray(\()p
0.00 0.50 0.00 TeXcolorrgb -1 w(str)o(uc)o(t)p 0 TeXcolorgray
37 w(request_queue)p 0.40 0.40 0.40 TeXcolorrgb 39 w(*)p
0 TeXcolorgray(q,)p 0.00 0.50 0.00 TeXcolorrgb 42 w(struct)p
0 TeXcolorgray 41 w(request)p 0.40 0.40 0.40 TeXcolorrgb
41 w(*)p 0 TeXcolorgray(rq,)p 0.00 0.50 0.00 TeXcolorrgb
1588 2019 a(struct)p 0 TeXcolorgray 41 w(request)p 0.40 0.40 0.40
TeXcolorrgb 41 w(*)p 0 TeXcolorgray(next\))150 2118 y({)499
2218 y(list_del_init\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray -1 w(nex)o(t)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0
TeXcolorgray(qu)o(eu)o(eli)o(st)o(\);)150 2317 y(})p
0.00 0.50 0.00 TeXcolorrgb 150 2517 a(static)p 0 TeXcolorgray
0.69 0.00 0.25 TeXcolorrgb 41 w(int)p 0 TeXcolorgray
0.00 0.00 1.00 TeXcolorrgb 42 w(sstf_dispatch)p 0 TeXcolorgray(\()p
0.00 0.50 0.00 TeXcolorrgb(str)o(uct)p 0 TeXcolorgray
37 w(request_queue)p 0.40 0.40 0.40 TeXcolorrgb 38 w(*)p
0 TeXcolorgray(q,)p 0.69 0.00 0.25 TeXcolorrgb 42 w(int)p
0 TeXcolorgray 43 w(force\))150 2616 y({)p 0.00 0.50 0.00
TeXcolorrgb 499 2716 a(struct)p 0 TeXcolorgray 41 w(sstf_data)p
0.40 0.40 0.40 TeXcolorrgb 40 w(*)p 0 TeXcolorgray(nd)p
0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray 43
w(q)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(elevator)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(elev)o(at)o(or)o(_da)o(ta)o(;)p 0.00 0.50 0.00
TeXcolorrgb 847 2915 a(if)p 0 TeXcolorgray 43 w(\(q)p
0.40 0.40 0.40 TeXcolorrgb(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(=)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb(NULL)p
0 TeXcolorgray(\))p 0.00 0.50 0.00 TeXcolorrgb 1196 3015
a(return)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
41 w(0)p 0 TeXcolorgray(;)p 0.00 0.50 0.00 TeXcolorrgb
499 3214 a(if)p 0 TeXcolorgray 42 w(\()p 0.40 0.40 0.40
TeXcolorrgb(!)p 0 TeXcolorgray(list_empty\()p 0.40 0.40 0.40
TeXcolorrgb(&)p 0 TeXcolorgray(nd)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0
TeXcolorgray(qu)o(eu)o(e\)\))e({)p 0.00 0.50 0.00 TeXcolorrgb
847 3314 a(struct)p 0 TeXcolorgray 41 w(request)p 0.40 0.40 0.40
TeXcolorrgb 41 w(*)p 0 TeXcolorgray(rq,)p 0.40 0.40 0.40
TeXcolorrgb 42 w(*)p 0 TeXcolorgray(nextrq,)p 0.40 0.40 0.40
TeXcolorrgb 40 w(*)p 0 TeXcolorgray(prevrq;)847 3413
y(sector_t)k(next,)g(prev;)847 3613 y(nextrq)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 44 w(list_entry\(nd)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray -1 w(que)o(ue)o(.ne)o(xt)o(,)p
0.00 0.50 0.00 TeXcolorrgb 37 w(struct)p 0 TeXcolorgray
42 w(request,)f(queuelist\);)847 3712 y(next)p 0.40 0.40 0.40
TeXcolorrgb 42 w(=)p 0 TeXcolorgray 43 w(blk_rq_pos\(nextrq)o(\);)847
3911 y(prevrq)p 0.40 0.40 0.40 TeXcolorrgb 41 w(=)p 0
TeXcolorgray 44 w(list_entry\(nd)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
-1 w(que)o(ue)o(.pr)o(ev)o(,)p 0.00 0.50 0.00 TeXcolorrgb
37 w(struct)p 0 TeXcolorgray 42 w(request,)g(queuelist\);)847
4011 y(prev)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray
43 w(blk_rq_pos\(prevrq)o(\);)p 0.00 0.50 0.00 TeXcolorrgb
847 4210 a(if)p 0 TeXcolorgray(\(nd)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(direction)p 0.40 0.40 0.40 TeXcolorrgb
37 w(>)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 44
w(0)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43 w(&)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray
42 w(next)p 0.40 0.40 0.40 TeXcolorrgb 42 w(>)p 0 TeXcolorgray
44 w(prev\))h({)p 0.25 0.50 0.50 TeXcolorrgb 1196 4310
a Fb(/*)i(MOVE)f(UP)h(*/)p 0 TeXcolorgray 1196 4410 a
Fa(rq)p 0.40 0.40 0.40 TeXcolorrgb 43 w(=)p 0 TeXcolorgray
43 w(nextrq;)847 4509 y(})p 0.00 0.50 0.00 TeXcolorrgb
44 w(else)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
41 w(if)p 0 TeXcolorgray(\(nd)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(direction)
p 0.40 0.40 0.40 TeXcolorrgb 37 w(<)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb 44 w(0)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 43 w(&)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray 43 w(next)p 0.40 0.40 0.40 TeXcolorrgb
41 w(<)p 0 TeXcolorgray 44 w(prev\))e({)p 0.25 0.50 0.50
TeXcolorrgb 1196 4609 a Fb(/*)i(UPPER)e(BOUND)h(*/)p
0 TeXcolorgray 1196 4708 a Fa(rq)p 0.40 0.40 0.40 TeXcolorrgb
43 w(=)p 0 TeXcolorgray 43 w(prevrq;)1196 4808 y(nd)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(direction)p 0.40 0.40 0.40
TeXcolorrgb 38 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(1)p
0 TeXcolorgray(;)847 4908 y(})p 0.00 0.50 0.00 TeXcolorrgb
44 w(else)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
41 w(if)p 0 TeXcolorgray(\(nd)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(direction)
p 0.40 0.40 0.40 TeXcolorrgb 37 w(<)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb 44 w(0)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 43 w(&)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray 43 w(next)p 0.40 0.40 0.40 TeXcolorrgb
41 w(<)p 0 TeXcolorgray 44 w(prev\))f({)p 0.25 0.50 0.50
TeXcolorrgb 1196 5007 a Fb(/*)i(Move)f(DOWN)g(*/)p 0
TeXcolorgray 0 TeXcolorgray 1929 5349 a Fe(3)p 0 TeXcolorgray
eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 1196 83 a Fa(rq)p 0.40 0.40 0.40 TeXcolorrgb
43 w(=)p 0 TeXcolorgray 43 w(prevrq;)847 183 y(})p 0.00 0.50 0.00
TeXcolorrgb 44 w(else)p 0 TeXcolorgray 41 w({)p 0.25 0.50 0.50
TeXcolorrgb 99 x Fb(/*)43 b(LOWER)e(BOUND)h(*/)p 0 TeXcolorgray
1196 382 a Fa(rq)p 0.40 0.40 0.40 TeXcolorrgb 43 w(=)p
0 TeXcolorgray 43 w(nextrq;)1196 482 y(nd)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(direction)p 0.40 0.40 0.40 TeXcolorrgb
38 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43
w(1)p 0 TeXcolorgray(;)847 581 y(})p 0.25 0.50 0.50 TeXcolorrgb
847 681 a Fb(/*)h(remove)e(request)g(*/)p 0 TeXcolorgray
847 780 a Fa(list_del_init\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray(rq)p 0.40 0.40 0.40 TeXcolorrgb -1 w(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(q)o(ue)o
(ue)o(lis)o(t\))o(;)847 880 y(nd)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(queue_count)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray -1 w(;)847
980 y(nd)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(head_pos)p
0.40 0.40 0.40 TeXcolorrgb 39 w(=)p 0 TeXcolorgray 43
w(blk_rq_pos\(rq\))p 0.40 0.40 0.40 TeXcolorrgb 82 w(+)p
0 TeXcolorgray 43 w(blk_rq_sectors\(r)o(q\))p 0.40 0.40 0.40
TeXcolorrgb 37 w(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(1)p 0 TeXcolorgray(;)847 1079 y(elv_dispatch_sort)o(\(q,)c(rq\);)p
0.25 0.50 0.50 TeXcolorrgb 847 1179 a Fb(/*)43 b(update)e(queue)h(head)
g(position)p 0 TeXcolorgray 0.25 0.50 0.50 TeXcolorrgb
847 1279 a(sstf_balance\(nd\);)37 b(*/)p 0 TeXcolorgray
0.00 0.50 0.00 TeXcolorrgb 847 1478 a Fa(if)p 0 TeXcolorgray
(\(rq_data_dir\(rq)o(\))p 0.40 0.40 0.40 TeXcolorrgb
38 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 42 w(0)p 0
TeXcolorgray(\))1196 1577 y(printk\(KERN_INFO)p 0.73 0.13 0.13
TeXcolorrgb 37 w(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb([SSTF])k
(dsp)h(READ)g(\045ld)p 0 TeXcolorgray 0.73 0.40 0.13
TeXcolorrgb(\\n)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray(,)1893 1677 y(\()p 0.69 0.00 0.25 TeXcolorrgb(long)p
0 TeXcolorgray(\)blk_rq_sect)o(ors)o(\(r)o(q\)\))o(;)p
0.00 0.50 0.00 TeXcolorrgb 847 1777 a(else)p 0 TeXcolorgray
1196 1876 a(printk\(KERN_INFO)p 0.73 0.13 0.13 TeXcolorrgb
37 w(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb([SSTF])f(dsp)h
(WRITE)g(\045ld)p 0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb(\\n)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(,)1893
1976 y(\()p 0.69 0.00 0.25 TeXcolorrgb(long)p 0 TeXcolorgray
(\)blk_rq_sect)o(ors)o(\(r)o(q\)\))o(;)p 0.00 0.50 0.00
TeXcolorrgb 847 2076 a(return)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb 41 w(1)p 0 TeXcolorgray(;)499 2175 y(})p
0.00 0.50 0.00 TeXcolorrgb 499 2275 a(return)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb 41 w(0)p 0 TeXcolorgray(;)150
2374 y(})p 0.00 0.50 0.00 TeXcolorrgb 150 2574 a(static)p
0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb 41 w(void)p
0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb 42 w(sstf_add_request)p
0 TeXcolorgray -1 w(\()p 0.00 0.50 0.00 TeXcolorrgb(st)o(ru)o(ct)p
0 TeXcolorgray 37 w(request_queue)p 0.40 0.40 0.40 TeXcolorrgb
38 w(*)p 0 TeXcolorgray(q,)p 0.00 0.50 0.00 TeXcolorrgb
43 w(struct)p 0 TeXcolorgray 41 w(request)p 0.40 0.40 0.40
TeXcolorrgb 40 w(*)p 0 TeXcolorgray(rq\))150 2673 y({)p
0.00 0.50 0.00 TeXcolorrgb 499 2773 a(struct)p 0 TeXcolorgray
41 w(sstf_data)p 0.40 0.40 0.40 TeXcolorrgb 40 w(*)p
0 TeXcolorgray(sd)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p
0 TeXcolorgray 43 w(q)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(elevator)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(elev)o(at)o(or)o(_da)o(ta)o(;)p
0.00 0.50 0.00 TeXcolorrgb 499 2873 a(struct)p 0 TeXcolorgray
41 w(list_head)p 0.40 0.40 0.40 TeXcolorrgb 40 w(*)p
0 TeXcolorgray(position;)p 0.25 0.50 0.50 TeXcolorrgb
499 2972 a Fb(/*)g(BASE)g(CASE)g(*/)p 0 TeXcolorgray
0.00 0.50 0.00 TeXcolorrgb 499 3072 a Fa(if)p 0 TeXcolorgray
(\(list_empty\()p 0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray
-1 w(sd)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0 TeXcolorgray(q)o(ueu)o(e\))o(\))
81 b({)847 3171 y(list_add\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray(rq)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(que)o(uel)o
(is)o(t,)p 0.40 0.40 0.40 TeXcolorrgb -1 w(&)p 0 TeXcolorgray(sd)p
0.40 0.40 0.40 TeXcolorrgb -1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray -1 w(que)o(ue)o(\);)847
3271 y(sd)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(queue_count)p
0.40 0.40 0.40 TeXcolorrgb(+)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(+)p 0 TeXcolorgray -1 w(;)p 0.00 0.50 0.00
TeXcolorrgb 847 3371 a(return)p 0 TeXcolorgray(;)499
3470 y(})499 3670 y(sector_t)40 b(rq_sect,)g(cur_sect,)g(next_sect;)499
3769 y(rq_sect)p 0.40 0.40 0.40 TeXcolorrgb 40 w(=)p
0 TeXcolorgray 44 w(blk_rq_pos\(rq\);)499 3968 y(list_for_each\(p)o
(osi)o(ti)o(on,)p 0.40 0.40 0.40 TeXcolorrgb 37 w(&)p
0 TeXcolorgray(sd)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(queue\))f({)
p 0.00 0.50 0.00 TeXcolorrgb 847 4168 a(if)p 0 TeXcolorgray
43 w(\(sd)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(queue_count)p
0.40 0.40 0.40 TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
43 w(1)p 0 TeXcolorgray(\))k({)1196 4267 y(list_add\()p
0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray(rq)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(qu)o(eue)o(li)o(st,)37 b(position\);)1196
4367 y(sd)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(queue_count)p
0.40 0.40 0.40 TeXcolorrgb(+)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb -1 w(+)p 0 TeXcolorgray(;)1196 4467 y(printk\(KERN_INFO)p
0.73 0.13 0.13 TeXcolorrgb 37 w(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb([SSTF])k(added)g(when)h(1)h(element)e(long)p
0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb(\\n)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)p 0.00 0.50 0.00
TeXcolorrgb 1196 4566 a(return)p 0 TeXcolorgray(;)847
4666 y(})p 0.00 0.50 0.00 TeXcolorrgb 847 4865 a(struct)p
0 TeXcolorgray 41 w(request)p 0.40 0.40 0.40 TeXcolorrgb
41 w(*)p 0 TeXcolorgray(cur_rq)p 0.40 0.40 0.40 TeXcolorrgb
41 w(=)p 0 TeXcolorgray 43 w(list_entry\(posit)o(ion)o(,)p
0.00 0.50 0.00 TeXcolorrgb 1545 4965 a(struct)p 0 TeXcolorgray
41 w(request,)f(queuelist\);)847 5064 y(cur_sect)p 0.40 0.40 0.40
TeXcolorrgb 41 w(=)p 0 TeXcolorgray 43 w(blk_rq_pos\(cur_r)o(q\))o(;)p
0 TeXcolorgray 1929 5349 a Fe(4)p 0 TeXcolorgray eop
end
%%Page: 5 6
TeXDict begin 5 5 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 847 183 a Fa(struct)p
0 TeXcolorgray 41 w(request)p 0.40 0.40 0.40 TeXcolorrgb
41 w(*)p 0 TeXcolorgray(next_rq)p 0.40 0.40 0.40 TeXcolorrgb
40 w(=)p 0 TeXcolorgray 44 w(list_entry\(posi)o(tio)o(n)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb -1 w(>)p 0 TeXcolorgray(ne)o(xt)o(,)p 0.00 0.50 0.00
TeXcolorrgb 1545 282 a(struct)p 0 TeXcolorgray 41 w(request,)40
b(queuelist\);)847 382 y(next_sect)p 0.40 0.40 0.40 TeXcolorrgb
40 w(=)p 0 TeXcolorgray 43 w(blk_rq_pos\(next_r)o(q\);)p
0.00 0.50 0.00 TeXcolorrgb 847 581 a(if)p 0 TeXcolorgray
43 w(\(rq_sect)p 0.40 0.40 0.40 TeXcolorrgb 40 w(>)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p 0 TeXcolorgray
43 w(cur_sect)p 0.40 0.40 0.40 TeXcolorrgb 40 w(&)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray
43 w(rq_sect)p 0.40 0.40 0.40 TeXcolorrgb 41 w(<)p 0
TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p 0 TeXcolorgray
43 w(next_sect\))f({)1196 681 y(list_add\()p 0.40 0.40 0.40
TeXcolorrgb(&)p 0 TeXcolorgray(rq)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(qu)o(eue)o
(li)o(st,)e(position\);)1196 780 y(sd)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(queue_count)p 0.40 0.40 0.40 TeXcolorrgb(+)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb -1 w(+)p 0
TeXcolorgray(;)1196 880 y(printk\(KERN_INFO)p 0.73 0.13 0.13
TeXcolorrgb 37 w(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb([SSTF])k
(added)g(in)i(Sort)p 0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb(\\n)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)p
0.00 0.50 0.00 TeXcolorrgb 1196 980 a(return)p 0 TeXcolorgray(;)847
1079 y(})499 1179 y(})p 0.25 0.50 0.50 TeXcolorrgb 499
1279 a Fb(/*)f(now)h(add)f(at)h(the)f(correct)f(position)f(*/)p
0 TeXcolorgray 499 1378 a Fa(list_add_tail\()p 0.40 0.40 0.40
TeXcolorrgb(&)p 0 TeXcolorgray -1 w(rq)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb
-1 w(>)p 0 TeXcolorgray(q)o(ueu)o(el)o(ist)o(,)p 0.40 0.40 0.40
TeXcolorrgb 37 w(&)p 0 TeXcolorgray(sd)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(queue\);)499 1478 y(sd)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(queue_count)p 0.40 0.40 0.40 TeXcolorrgb
-1 w(+)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(+)p
0 TeXcolorgray(;)499 1577 y(printk\(KERN_INF)o(O)p 0.73 0.13 0.13
TeXcolorrgb 38 w(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb([SSTF])g
(added)i(to)h(end)p 0 TeXcolorgray 0.73 0.40 0.13 TeXcolorrgb(\\n)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)150
1677 y(})p 0.00 0.50 0.00 TeXcolorrgb 150 1876 a(static)p
0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 41 w(struct)p
0 TeXcolorgray 41 w(request)p 0.40 0.40 0.40 TeXcolorrgb
41 w(*)p 0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb 150
1976 a(sstf_former_requ)o(est)p 0 TeXcolorgray -1 w(\()p
0.00 0.50 0.00 TeXcolorrgb(s)o(tr)o(uct)p 0 TeXcolorgray
37 w(request_queue)p 0.40 0.40 0.40 TeXcolorrgb 38 w(*)p
0 TeXcolorgray(q,)p 0.00 0.50 0.00 TeXcolorrgb 42 w(struct)p
0 TeXcolorgray 41 w(request)p 0.40 0.40 0.40 TeXcolorrgb
41 w(*)p 0 TeXcolorgray(rq\))150 2076 y({)p 0.00 0.50 0.00
TeXcolorrgb 499 2175 a(struct)p 0 TeXcolorgray 41 w(sstf_data)p
0.40 0.40 0.40 TeXcolorrgb 40 w(*)p 0 TeXcolorgray(nd)p
0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray 43
w(q)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(elevator)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(elev)o(at)o(or)o(_da)o(ta)o(;)p 0.00 0.50 0.00
TeXcolorrgb 499 2374 a(if)p 0 TeXcolorgray 42 w(\(rq)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(queuelist.pr)o(ev)p 0.40 0.40 0.40
TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43 w(&)p 0
TeXcolorgray(nd)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(queue\))p
0.00 0.50 0.00 TeXcolorrgb 847 2474 a(return)p 0 TeXcolorgray
0.00 0.50 0.00 TeXcolorrgb 41 w(NULL)p 0 TeXcolorgray(;)p
0.00 0.50 0.00 TeXcolorrgb 499 2574 a(return)p 0 TeXcolorgray
41 w(list_entry\(rq)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(q)o(ue)o
(uel)o(is)o(t.)o(pre)o(v,)p 0.00 0.50 0.00 TeXcolorrgb
37 w(struct)p 0 TeXcolorgray 41 w(request,)d(queuelist\);)150
2673 y(})p 0.00 0.50 0.00 TeXcolorrgb 150 2873 a(static)p
0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 41 w(struct)p
0 TeXcolorgray 41 w(request)p 0.40 0.40 0.40 TeXcolorrgb
41 w(*)p 0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb 150
2972 a(sstf_latter_requ)o(est)p 0 TeXcolorgray -1 w(\()p
0.00 0.50 0.00 TeXcolorrgb(s)o(tr)o(uct)p 0 TeXcolorgray
37 w(request_queue)p 0.40 0.40 0.40 TeXcolorrgb 38 w(*)p
0 TeXcolorgray(q,)p 0.00 0.50 0.00 TeXcolorrgb 42 w(struct)p
0 TeXcolorgray 41 w(request)p 0.40 0.40 0.40 TeXcolorrgb
41 w(*)p 0 TeXcolorgray(rq\))150 3072 y({)p 0.00 0.50 0.00
TeXcolorrgb 499 3171 a(struct)p 0 TeXcolorgray 41 w(sstf_data)p
0.40 0.40 0.40 TeXcolorrgb 40 w(*)p 0 TeXcolorgray(nd)p
0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray 43
w(q)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(elevator)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(elev)o(at)o(or)o(_da)o(ta)o(;)p 0.00 0.50 0.00
TeXcolorrgb 499 3371 a(if)p 0 TeXcolorgray 42 w(\(rq)p
0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray(queuelist.ne)o(xt)p 0.40 0.40 0.40
TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(=)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 43 w(&)p 0
TeXcolorgray(nd)p 0.40 0.40 0.40 TeXcolorrgb(-)p 0 TeXcolorgray
0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(queue\))p
0.00 0.50 0.00 TeXcolorrgb 847 3470 a(return)p 0 TeXcolorgray
0.00 0.50 0.00 TeXcolorrgb 41 w(NULL)p 0 TeXcolorgray(;)p
0.00 0.50 0.00 TeXcolorrgb 499 3570 a(return)p 0 TeXcolorgray
41 w(list_entry\(rq)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray(q)o(ue)o
(uel)o(is)o(t.)o(nex)o(t,)p 0.00 0.50 0.00 TeXcolorrgb
37 w(struct)p 0 TeXcolorgray 41 w(request,)g(queuelist\);)150
3670 y(})p 0.00 0.50 0.00 TeXcolorrgb 150 3869 a(static)p
0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb 41 w(void)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 42 w(*)p 0
TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb(sstf_init_queue)p
0 TeXcolorgray -1 w(\()p 0.00 0.50 0.00 TeXcolorrgb(st)o(ru)o(ct)p
0 TeXcolorgray 37 w(request_queue)p 0.40 0.40 0.40 TeXcolorrgb
38 w(*)p 0 TeXcolorgray(q\))150 3968 y({)p 0.00 0.50 0.00
TeXcolorrgb 499 4068 a(struct)p 0 TeXcolorgray 41 w(sstf_data)p
0.40 0.40 0.40 TeXcolorrgb 40 w(*)p 0 TeXcolorgray(nd;)499
4267 y(nd)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p 0 TeXcolorgray
44 w(kmalloc_node\()p 0.00 0.50 0.00 TeXcolorrgb(si)o(zeo)o(f)p
0 TeXcolorgray(\()p 0.40 0.40 0.40 TeXcolorrgb -1 w(*)p
0 TeXcolorgray(nd)o(\),)d(GFP_KERNEL,)i(q)p 0.40 0.40 0.40
TeXcolorrgb(-)p 0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p
0 TeXcolorgray(node\);)p 0.00 0.50 0.00 TeXcolorrgb 499
4367 a(if)p 0 TeXcolorgray 42 w(\()p 0.40 0.40 0.40 TeXcolorrgb(!)p
0 TeXcolorgray(nd\))p 0.00 0.50 0.00 TeXcolorrgb 847
4467 a(return)p 0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb
41 w(NULL)p 0 TeXcolorgray(;)499 4566 y(INIT_LIST_HEAD\()p
0.40 0.40 0.40 TeXcolorrgb -1 w(&)p 0 TeXcolorgray(nd)p
0.40 0.40 0.40 TeXcolorrgb -1 w(-)p 0 TeXcolorgray 0.40 0.40 0.40
TeXcolorrgb(>)p 0 TeXcolorgray -1 w(que)o(ue)o(\);)p
0.00 0.50 0.00 TeXcolorrgb 499 4666 a(return)p 0 TeXcolorgray
41 w(nd;)150 4765 y(})p 0.00 0.50 0.00 TeXcolorrgb 150
4965 a(static)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
41 w(void)p 0 TeXcolorgray 0.00 0.00 1.00 TeXcolorrgb
42 w(sstf_exit_queue)p 0 TeXcolorgray(\()p 0.00 0.50 0.00
TeXcolorrgb -1 w(str)o(uc)o(t)p 0 TeXcolorgray 38 w(elevator_queue)p
0.40 0.40 0.40 TeXcolorrgb 37 w(*)p 0 TeXcolorgray(e\))150
5064 y({)p 0 TeXcolorgray 1929 5349 a Fe(5)p 0 TeXcolorgray
eop end
%%Page: 6 7
TeXDict begin 6 6 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 499 83 a Fa(struct)p
0 TeXcolorgray 41 w(sstf_data)p 0.40 0.40 0.40 TeXcolorrgb
40 w(*)p 0 TeXcolorgray(nd)p 0.40 0.40 0.40 TeXcolorrgb
42 w(=)p 0 TeXcolorgray 43 w(e)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb(>)p 0 TeXcolorgray
(elevator_data;)499 282 y(BUG_ON\()p 0.40 0.40 0.40 TeXcolorrgb(!)p
0 TeXcolorgray(list_em)o(pty)o(\()p 0.40 0.40 0.40 TeXcolorrgb(&)p
0 TeXcolorgray -1 w(nd)p 0.40 0.40 0.40 TeXcolorrgb(-)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb -1 w(>)p 0
TeXcolorgray(q)o(ueu)o(e\))o(\);)499 382 y(kfree\(nd\);)150
482 y(})p 0.00 0.50 0.00 TeXcolorrgb 150 681 a(static)p
0 TeXcolorgray 0.00 0.50 0.00 TeXcolorrgb 41 w(struct)p
0 TeXcolorgray 41 w(elevator_type)38 b(elevator_sstf)p
0.40 0.40 0.40 TeXcolorrgb 39 w(=)p 0 TeXcolorgray 43
w({)499 780 y(.ops)p 0.40 0.40 0.40 TeXcolorrgb 42 w(=)p
0 TeXcolorgray 43 w({)847 880 y(.elevator_merge_r)o(eq_)o(fn)p
0.40 0.40 0.40 TeXcolorrgb 691 w(=)p 0 TeXcolorgray 43
w(sstf_merged_requ)o(es)o(ts,)847 980 y(.elevator_dispatc)o(h_f)o(n)p
0.40 0.40 0.40 TeXcolorrgb 691 w(=)p 0 TeXcolorgray 43
w(sstf_dispatch,)847 1079 y(.elevator_add_req)o(_fn)p
0.40 0.40 0.40 TeXcolorrgb 690 w(=)p 0 TeXcolorgray 44
w(sstf_add_reques)o(t,)847 1179 y(.elevator_former_)o(req)o(_f)o(n)p
0.40 0.40 0.40 TeXcolorrgb 212 w(=)p 0 TeXcolorgray 43
w(sstf_former_requ)o(est)o(,)847 1279 y(.elevator_latter_)o(req)o(_f)o
(n)p 0.40 0.40 0.40 TeXcolorrgb 212 w(=)p 0 TeXcolorgray
43 w(sstf_latter_requ)o(est)o(,)847 1378 y(.elevator_init_fn)p
0.40 0.40 0.40 TeXcolorrgb 473 w(=)p 0 TeXcolorgray 43
w(sstf_init_queue,)847 1478 y(.elevator_exit_fn)p 0.40 0.40 0.40
TeXcolorrgb 473 w(=)p 0 TeXcolorgray 43 w(sstf_exit_queue,)499
1577 y(},)499 1677 y(.elevator_name)p 0.40 0.40 0.40
TeXcolorrgb 37 w(=)p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb
44 w(")p 0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(sstf)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(,)499
1777 y(.elevator_owner)p 0.40 0.40 0.40 TeXcolorrgb 37
w(=)p 0 TeXcolorgray 43 w(THIS_MODULE,)150 1876 y(};)p
0.00 0.50 0.00 TeXcolorrgb 150 2076 a(static)p 0 TeXcolorgray
0.69 0.00 0.25 TeXcolorrgb 41 w(int)p 0 TeXcolorgray
42 w(__init)p 0.00 0.00 1.00 TeXcolorrgb 42 w(sstf_init)p
0 TeXcolorgray(\()p 0.69 0.00 0.25 TeXcolorrgb(void)p
0 TeXcolorgray(\))150 2175 y({)499 2275 y(elv_register\()p
0.40 0.40 0.40 TeXcolorrgb(&)p 0 TeXcolorgray(e)o(lev)o(at)o(or_)o(ss)o
(tf\))o(;)p 0.00 0.50 0.00 TeXcolorrgb 499 2474 a(return)p
0 TeXcolorgray 0.40 0.40 0.40 TeXcolorrgb 41 w(0)p 0
TeXcolorgray(;)150 2574 y(})p 0.00 0.50 0.00 TeXcolorrgb
150 2773 a(static)p 0 TeXcolorgray 0.69 0.00 0.25 TeXcolorrgb
41 w(void)p 0 TeXcolorgray 42 w(__exit)p 0.00 0.00 1.00
TeXcolorrgb 41 w(sstf_exit)p 0 TeXcolorgray(\()p 0.69 0.00 0.25
TeXcolorrgb(void)p 0 TeXcolorgray(\))150 2873 y({)499
2972 y(elv_unregister\()p 0.40 0.40 0.40 TeXcolorrgb
-1 w(&)p 0 TeXcolorgray(el)o(ev)o(ato)o(r_)o(sst)o(f\))o(;)150
3072 y(})150 3271 y(module_init\(sstf)o(_in)o(it)o(\);)150
3371 y(module_exit\(sstf)o(_ex)o(it)o(\);)150 3670 y(MODULE_AUTHOR\()p
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(C)o(S41)o(1)f(-)43 b(GROUP14)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)150
3769 y(MODULE_LICENSE\()p 0.73 0.13 0.13 TeXcolorrgb(")p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb -1 w(GPL)p
0 TeXcolorgray 0.73 0.13 0.13 TeXcolorrgb -1 w(")p 0
TeXcolorgray(\))o(;)150 3869 y(MODULE_DESCRIPTI)o(ON\()p
0.73 0.13 0.13 TeXcolorrgb -1 w(")p 0 TeXcolorgray 0.73 0.13 0.13
TeXcolorrgb(S)o(ST)o(F)38 b(IO)k(scheduler)p 0 TeXcolorgray
0.73 0.13 0.13 TeXcolorrgb(")p 0 TeXcolorgray(\);)p 0
TeXcolorgray 1929 5349 a Fe(6)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
